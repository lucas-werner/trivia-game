{"ast":null,"code":"import _objectSpread from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as types from'../actions/ActionTypes';var INICIAL_STATE={name:'',gravatarEmail:'',assertions:0,score:0};var ReducerPlayer=function ReducerPlayer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INICIAL_STATE;var _ref=arguments.length>1?arguments[1]:undefined,type=_ref.type,payload=_ref.payload;switch(type){case types.SAVE_PLAYER:return _objectSpread(_objectSpread({},state),{},{name:payload.name,gravatarEmail:payload.gravatarEmail});case types.SUM_POINTS:return _objectSpread(_objectSpread({},state),{},{score:state.score+payload.score,assertions:state.assertions+1});default:return state;}};export default ReducerPlayer;","map":{"version":3,"sources":["/home/lucaswerner/repositories/github-personal/trivia-game/src/store/reducers/ReducerPlayer.js"],"names":["types","INICIAL_STATE","name","gravatarEmail","assertions","score","ReducerPlayer","state","type","payload","SAVE_PLAYER","SUM_POINTS"],"mappings":"gLAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,wBAAvB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,IAAI,CAAE,EADc,CAEpBC,aAAa,CAAE,EAFK,CAGpBC,UAAU,CAAE,CAHQ,CAIpBC,KAAK,CAAE,CAJa,CAAtB,CAOA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAA8C,IAA7CC,CAAAA,KAA6C,2DAArCN,aAAqC,oDAApBO,IAAoB,MAApBA,IAAoB,CAAdC,OAAc,MAAdA,OAAc,CAClE,OAAQD,IAAR,EACE,IAAKR,CAAAA,KAAK,CAACU,WAAX,CACE,sCAAYH,KAAZ,MAAmBL,IAAI,CAAEO,OAAO,CAACP,IAAjC,CAAuCC,aAAa,CAAEM,OAAO,CAACN,aAA9D,GACF,IAAKH,CAAAA,KAAK,CAACW,UAAX,CACE,sCACKJ,KADL,MAEEF,KAAK,CAAEE,KAAK,CAACF,KAAN,CAAcI,OAAO,CAACJ,KAF/B,CAGED,UAAU,CAAEG,KAAK,CAACH,UAAN,CAAmB,CAHjC,GAKF,QACE,MAAOG,CAAAA,KAAP,CAVJ,CAYD,CAbD,CAeA,cAAeD,CAAAA,aAAf","sourcesContent":["import * as types from '../actions/ActionTypes';\n\nconst INICIAL_STATE = {\n  name: '',\n  gravatarEmail: '',\n  assertions: 0,\n  score: 0,\n};\n\nconst ReducerPlayer = (state = INICIAL_STATE, { type, payload }) => {\n  switch (type) {\n    case types.SAVE_PLAYER:\n      return { ...state, name: payload.name, gravatarEmail: payload.gravatarEmail };\n    case types.SUM_POINTS:\n      return {\n        ...state,\n        score: state.score + payload.score,\n        assertions: state.assertions + 1,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default ReducerPlayer;\n"]},"metadata":{},"sourceType":"module"}