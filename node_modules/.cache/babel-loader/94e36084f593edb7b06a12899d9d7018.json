{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/GamePage/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport propTypes from 'prop-types';\nimport SettingsButton from '../../components/SettingsButton';\nimport Loading from '../../components/Loading';\nimport ActionGetQuestions from '../../store/actions/ActionGetQuestions';\n\nclass Game extends Component {\n  componentDidMount() {\n    const {\n      GetQuestions\n    } = this.props;\n    const token = localStorage.getItem('token');\n    console.log('token:', token);\n    GetQuestions(token);\n  }\n\n  render() {\n    const {\n      questions\n    } = this.props;\n\n    if (questions.length === 0) {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SettingsButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), questions.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 34\n      }\n    }, item.category)));\n  }\n\n}\n\nGame.propTypes = {\n  GetQuestions: propTypes.func.isRequired,\n  questions: propTypes.arrayOf(propTypes.object).isRequired\n};\n\nconst mapStateToProps = ({\n  ReducerQuestions: {\n    loading,\n    questions\n  }\n}) => ({\n  loading,\n  questions\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  GetQuestions: ActionGetQuestions\n}, dispatch);\n\nGame.propTypes = {};\nGame.defaultProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/GamePage/index.js"],"names":["React","Component","connect","bindActionCreators","propTypes","SettingsButton","Loading","ActionGetQuestions","Game","componentDidMount","GetQuestions","props","token","localStorage","getItem","console","log","render","questions","length","map","item","category","func","isRequired","arrayOf","object","mapStateToProps","ReducerQuestions","loading","mapDispatchToProps","dispatch","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,kBAAP,MAA+B,wCAA/B;;AAEA,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAC3BQ,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKC,KAA9B;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,KAAtB;AACAF,IAAAA,YAAY,CAACE,KAAD,CAAZ;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKP,KAA3B;;AACA,QAAIO,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGD,SAAS,CAACE,GAAV,CAAeC,IAAD,iBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,IAAI,CAACC,QAAX,CAAxB,CAFH,CADF;AAMD;;AAnB0B;;AAsB7Bd,IAAI,CAACJ,SAAL,GAAiB;AACfM,EAAAA,YAAY,EAAEN,SAAS,CAACmB,IAAV,CAAeC,UADd;AAEfN,EAAAA,SAAS,EAAEd,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACsB,MAA5B,EAAoCF;AAFhC,CAAjB;;AAKA,MAAMG,eAAe,GAAG,CAAC;AAAEC,EAAAA,gBAAgB,EAAE;AAAEC,IAAAA,OAAF;AAAWX,IAAAA;AAAX;AAApB,CAAD,MAAmD;AACzEW,EAAAA,OADyE;AAEzEX,EAAAA;AAFyE,CAAnD,CAAxB;;AAMA,MAAMY,kBAAkB,GAAIC,QAAD,IAAc5B,kBAAkB,CACzD;AACEO,EAAAA,YAAY,EAAEH;AADhB,CADyD,EAGtDwB,QAHsD,CAA3D;;AAMAvB,IAAI,CAACJ,SAAL,GAAiB,EAAjB;AAGAI,IAAI,CAACwB,YAAL,GAAoB,EAApB;AAGA,eAAe9B,OAAO,CAACyB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtB,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport propTypes from 'prop-types';\nimport SettingsButton from '../../components/SettingsButton';\nimport Loading from '../../components/Loading';\nimport ActionGetQuestions from '../../store/actions/ActionGetQuestions';\n\nclass Game extends Component {\n  componentDidMount() {\n    const { GetQuestions } = this.props;\n    const token = localStorage.getItem('token');\n    console.log('token:', token);\n    GetQuestions(token);\n  }\n\n  render() {\n    const { questions } = this.props;\n    if (questions.length === 0) {\n      return <Loading />;\n    }\n    return (\n      <div>\n        <SettingsButton />\n        {questions.map((item) => <div>{item.category}</div>)}\n      </div>\n    );\n  }\n}\n\nGame.propTypes = {\n  GetQuestions: propTypes.func.isRequired,\n  questions: propTypes.arrayOf(propTypes.object).isRequired,\n};\n\nconst mapStateToProps = ({ ReducerQuestions: { loading, questions } }) => ({\n  loading,\n  questions,\n});\n\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    GetQuestions: ActionGetQuestions,\n  }, dispatch,\n);\n\nGame.propTypes = {\n};\n\nGame.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}