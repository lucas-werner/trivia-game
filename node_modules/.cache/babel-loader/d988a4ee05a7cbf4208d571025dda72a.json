{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/FeedbackPage/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Header from '../../components/GameHeader';\n\nclass Feedback extends Component {\n  static renderFeedbackMessage() {\n    const stringfiedState = localStorage.getItem('state');\n    const state = JSON.parse(stringfiedState);\n    const {\n      player: {\n        assertions\n      }\n    } = state;\n\n    if (assertions < 3) {\n      return 'Podia ser melhor...';\n    }\n\n    return 'Mandou bem!';\n  }\n\n  static renderFeedbackInfo() {\n    const stringfiedState = localStorage.getItem('state');\n    const state = JSON.parse(stringfiedState);\n    const {\n      player: {\n        assertions,\n        score\n      }\n    } = state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"feedback-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, Feedback.renderFeedbackMessage(assertions)), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, score), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, assertions));\n  }\n\n  static renderButtons() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"btn-play-again\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \"Jogar novamente\")), /*#__PURE__*/React.createElement(Link, {\n      to: \"/ranking\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"btn-ranking\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"Ver Ranking\")));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        textAlign: 'center',\n        width: '600px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), Feedback.renderFeedbackInfo(), Feedback.renderButtons());\n  }\n\n}\n\nconst mapStateToProps = ({\n  ReducerQuestions: {\n    loading,\n    questions\n  }\n}) => ({\n  loading,\n  questions\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nFeedback.defaultProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/FeedbackPage/index.js"],"names":["React","Component","Link","connect","bindActionCreators","Header","Feedback","renderFeedbackMessage","stringfiedState","localStorage","getItem","state","JSON","parse","player","assertions","renderFeedbackInfo","score","renderButtons","render","display","justifyContent","flexDirection","textAlign","width","mapStateToProps","ReducerQuestions","loading","questions","mapDispatchToProps","dispatch","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Header from '../../components/GameHeader';\n\nclass Feedback extends Component {\n  static renderFeedbackMessage() {\n    const stringfiedState = localStorage.getItem('state');\n    const state = JSON.parse(stringfiedState);\n    const { player: { assertions } } = state;\n    if (assertions < 3) {\n      return 'Podia ser melhor...';\n    }\n    return 'Mandou bem!';\n  }\n\n  static renderFeedbackInfo() {\n    const stringfiedState = localStorage.getItem('state');\n    const state = JSON.parse(stringfiedState);\n    const { player: { assertions, score } } = state;\n    return (\n      <div>\n        <p data-testid=\"feedback-text\">{Feedback.renderFeedbackMessage(assertions)}</p>\n        <p data-testid=\"feedback-total-score\">{score}</p>\n        <p data-testid=\"feedback-total-question\">{assertions}</p>\n      </div>\n    );\n  }\n\n  static renderButtons() {\n    return (\n      <div>\n        <Link to=\"/\">\n          <button data-testid=\"btn-play-again\" type=\"button\">\n            Jogar novamente\n          </button>\n        </Link>\n        <Link to=\"/ranking\">\n          <button data-testid=\"btn-ranking\" type=\"button\">\n            Ver Ranking\n          </button>\n        </Link>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          textAlign: 'center',\n          width: '600px',\n        }}\n      >\n        <Header />\n        {Feedback.renderFeedbackInfo()}\n        {Feedback.renderButtons()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ ReducerQuestions: { loading, questions } }) => ({\n  loading,\n  questions,\n});\n\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n\n  }, dispatch,\n);\n\nFeedback.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\n"]},"metadata":{},"sourceType":"module"}