{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/components/Timer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { ActionTickTimer } from '../store/actions/ActionsTimer';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      setTimer: ''\n    };\n  }\n\n  componentDidMount() {\n    this.StartTimer();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      stopTimer\n    } = this.props;\n    const {\n      stopTimer: prevStopTimer\n    } = prevProps;\n    const {\n      setTimer\n    } = this.state;\n\n    if (stopTimer === true) {\n      clearInterval(setTimer);\n    }\n\n    if (prevStopTimer === true) {\n      clearInterval(setTimer);\n      this.StartTimer();\n    }\n  }\n\n  StartTimer() {\n    const {\n      TickTimer\n    } = this.props;\n    this.setState({\n      setTimer: setInterval(() => TickTimer(), 1000)\n    });\n  }\n\n  render() {\n    const {\n      timer\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"timer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, `Tempo: ${timer}`);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  TickTimer: ActionTickTimer\n}, dispatch);\n\nconst mapStateToProps = ({\n  timeReducer: {\n    timer,\n    stopTimer\n  }\n}) => ({\n  timer,\n  stopTimer\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\nTimer.propTypes = {\n  stopTimer: PropTypes.bool,\n  timer: PropTypes.number.isRequired,\n  TickTimer: PropTypes.func.isRequired\n};\nTimer.defaultProps = {\n  stopTimer: false\n};","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/components/Timer.js"],"names":["React","Component","connect","PropTypes","bindActionCreators","ActionTickTimer","Timer","constructor","props","state","setTimer","componentDidMount","StartTimer","componentDidUpdate","prevProps","stopTimer","prevStopTimer","clearInterval","TickTimer","setState","setInterval","render","timer","mapDispatchToProps","dispatch","mapStateToProps","timeReducer","propTypes","bool","number","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,eAAT,QAAgC,+BAAhC;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAC5BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKP,KAA3B;AACA,UAAM;AAAEO,MAAAA,SAAS,EAAEC;AAAb,QAA+BF,SAArC;AACA,UAAM;AAAEJ,MAAAA;AAAF,QAAe,KAAKD,KAA1B;;AACA,QAAIM,SAAS,KAAK,IAAlB,EAAwB;AACtBE,MAAAA,aAAa,CAACP,QAAD,CAAb;AACD;;AAED,QAAIM,aAAa,KAAK,IAAtB,EAA4B;AAC1BC,MAAAA,aAAa,CAACP,QAAD,CAAb;AACA,WAAKE,UAAL;AACD;AACF;;AAEDA,EAAAA,UAAU,GAAG;AACX,UAAM;AAAEM,MAAAA;AAAF,QAAgB,KAAKV,KAA3B;AACA,SAAKW,QAAL,CAAc;AAAET,MAAAA,QAAQ,EAAEU,WAAW,CAAC,MAAMF,SAAS,EAAhB,EAAoB,IAApB;AAAvB,KAAd;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKd,KAAvB;AACA,wBACE;AAAK,qBAAY,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,UAASc,KAAM,EADnB,CADF;AAKD;;AAtC2B;;AAyC9B,MAAMC,kBAAkB,GAAIC,QAAD,IAAcpB,kBAAkB,CACzD;AACEc,EAAAA,SAAS,EAAEb;AADb,CADyD,EAGtDmB,QAHsD,CAA3D;;AAMA,MAAMC,eAAe,GAAG,CAAC;AACvBC,EAAAA,WAAW,EAAE;AAAEJ,IAAAA,KAAF;AAASP,IAAAA;AAAT;AADU,CAAD,MAEjB;AACLO,EAAAA,KADK;AACEP,EAAAA;AADF,CAFiB,CAAxB;;AAMA,eAAeb,OAAO,CAACuB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CjB,KAA7C,CAAf;AAEAA,KAAK,CAACqB,SAAN,GAAkB;AAChBZ,EAAAA,SAAS,EAAEZ,SAAS,CAACyB,IADL;AAEhBN,EAAAA,KAAK,EAAEnB,SAAS,CAAC0B,MAAV,CAAiBC,UAFR;AAGhBZ,EAAAA,SAAS,EAAEf,SAAS,CAAC4B,IAAV,CAAeD;AAHV,CAAlB;AAMAxB,KAAK,CAAC0B,YAAN,GAAqB;AACnBjB,EAAAA,SAAS,EAAE;AADQ,CAArB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { ActionTickTimer } from '../store/actions/ActionsTimer';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      setTimer: '',\n    };\n  }\n\n  componentDidMount() {\n    this.StartTimer();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { stopTimer } = this.props;\n    const { stopTimer: prevStopTimer } = prevProps;\n    const { setTimer } = this.state;\n    if (stopTimer === true) {\n      clearInterval(setTimer);\n    }\n\n    if (prevStopTimer === true) {\n      clearInterval(setTimer);\n      this.StartTimer();\n    }\n  }\n\n  StartTimer() {\n    const { TickTimer } = this.props;\n    this.setState({ setTimer: setInterval(() => TickTimer(), 1000) });\n  }\n\n  render() {\n    const { timer } = this.props;\n    return (\n      <div data-testid=\"timer\">\n        {`Tempo: ${timer}`}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    TickTimer: ActionTickTimer,\n  }, dispatch,\n);\n\nconst mapStateToProps = ({\n  timeReducer: { timer, stopTimer },\n}) => ({\n  timer, stopTimer,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n\nTimer.propTypes = {\n  stopTimer: PropTypes.bool,\n  timer: PropTypes.number.isRequired,\n  TickTimer: PropTypes.func.isRequired,\n};\n\nTimer.defaultProps = {\n  stopTimer: false,\n};"]},"metadata":{},"sourceType":"module"}