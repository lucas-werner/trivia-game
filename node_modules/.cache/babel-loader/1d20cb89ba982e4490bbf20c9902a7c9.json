{"ast":null,"code":"import * as types from '../actions/ActionTypes';\nconst INICIAL_STATE = {\n  timer: 30,\n  stopTimer: false\n};\n\nconst ReducerTimer = (state = INICIAL_STATE, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case types.TICK_TIMER:\n      if (state.timer !== 0 && state.stopTimer === false) {\n        return { ...state,\n          timer: state.timer - 1\n        };\n      }\n\n      return { ...state\n      };\n\n    case types.RESET_TIMER:\n      return { ...state,\n        stopTimer: false,\n        timer: 30\n      };\n\n    case types.STOP_TIMER:\n      return { ...state,\n        stopTimer: true,\n        timer: 30\n      };\n\n    case types.SAVE_TIME:\n      return { ...state,\n        timeID: payload.timeID\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default ReducerTimer;","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/store/reducers/ReducerTimer.js"],"names":["types","INICIAL_STATE","timer","stopTimer","ReducerTimer","state","type","payload","TICK_TIMER","RESET_TIMER","STOP_TIMER","SAVE_TIME","timeID"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwB;AAAEK,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAxB,KAA8C;AACjE,UAAQD,IAAR;AACE,SAAKN,KAAK,CAACQ,UAAX;AACE,UAAIH,KAAK,CAACH,KAAN,KAAgB,CAAhB,IAAqBG,KAAK,CAACF,SAAN,KAAoB,KAA7C,EAAoD;AAClD,eAAO,EACL,GAAGE,KADE;AACKH,UAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAc;AAD1B,SAAP;AAGD;;AAAC,aAAO,EAAE,GAAGG;AAAL,OAAP;;AACJ,SAAKL,KAAK,CAACS,WAAX;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYF,QAAAA,SAAS,EAAE,KAAvB;AAA8BD,QAAAA,KAAK,EAAE;AAArC,OAAP;;AACF,SAAKF,KAAK,CAACU,UAAX;AACE,aAAO,EAAE,GAAGL,KAAL;AAAYF,QAAAA,SAAS,EAAE,IAAvB;AAA6BD,QAAAA,KAAK,EAAE;AAApC,OAAP;;AACF,SAAKF,KAAK,CAACW,SAAX;AACE,aAAO,EAAE,GAAGN,KAAL;AAAYO,QAAAA,MAAM,EAAEL,OAAO,CAACK;AAA5B,OAAP;;AACF;AACE,aAAOP,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,YAAf","sourcesContent":["import * as types from '../actions/ActionTypes';\n\nconst INICIAL_STATE = {\n  timer: 30,\n  stopTimer: false,\n};\n\nconst ReducerTimer = (state = INICIAL_STATE, { type, payload }) => {\n  switch (type) {\n    case types.TICK_TIMER:\n      if (state.timer !== 0 && state.stopTimer === false) {\n        return {\n          ...state, timer: state.timer - 1,\n        };\n      } return { ...state };\n    case types.RESET_TIMER:\n      return { ...state, stopTimer: false, timer: 30 };\n    case types.STOP_TIMER:\n      return { ...state, stopTimer: true, timer: 30 };\n    case types.SAVE_TIME:\n      return { ...state, timeID: payload.timeID };\n    default:\n      return state;\n  }\n};\n\nexport default ReducerTimer;\n"]},"metadata":{},"sourceType":"module"}