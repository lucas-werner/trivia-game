{"ast":null,"code":"import * as types from '../actions/ActionTypes';\nconst INICIAL_STATE = {\n  name: '',\n  gravatarEmail: '',\n  assertions: 0,\n  score: 0\n};\n\nconst ReducerPlayer = (state = INICIAL_STATE, {\n  type,\n  payload\n}) => {\n  console.log('no reducer', payload.score);\n\n  switch (type) {\n    case types.SAVE_PLAYER:\n      return { ...state,\n        name: payload.name,\n        gravatarEmail: payload.gravatarEmail\n      };\n\n    case types.SAVE_SCORE:\n      return { ...state,\n        score: state.score + payload.score,\n        assertions: state.assertions + (payload.score > 0) ? 1 : 0\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default ReducerPlayer;","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/store/reducers/ReducerPlayer.js"],"names":["types","INICIAL_STATE","name","gravatarEmail","assertions","score","ReducerPlayer","state","type","payload","console","log","SAVE_PLAYER","SAVE_SCORE"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,aAAa,EAAE,EAFK;AAGpBC,EAAAA,UAAU,EAAE,CAHQ;AAIpBC,EAAAA,KAAK,EAAE;AAJa,CAAtB;;AAOA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGN,aAAT,EAAwB;AAAEO,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAxB,KAA8C;AAClEC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,OAAO,CAACJ,KAAlC;;AACA,UAAQG,IAAR;AACE,SAAKR,KAAK,CAACY,WAAX;AACE,aAAO,EAAE,GAAGL,KAAL;AAAYL,QAAAA,IAAI,EAAEO,OAAO,CAACP,IAA1B;AAAgCC,QAAAA,aAAa,EAAEM,OAAO,CAACN;AAAvD,OAAP;;AACF,SAAKH,KAAK,CAACa,UAAX;AACE,aAAO,EAAE,GAAGN,KAAL;AAAYF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcI,OAAO,CAACJ,KAAzC;AAAgDD,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,IAAoBK,OAAO,CAACJ,KAAR,GAAgB,CAApC,IAAyC,CAAzC,GAA6C;AAAzG,OAAP;;AACF;AACE,aAAOE,KAAP;AANJ;AAQD,CAVD;;AAYA,eAAeD,aAAf","sourcesContent":["import * as types from '../actions/ActionTypes';\n\nconst INICIAL_STATE = {\n  name: '',\n  gravatarEmail: '',\n  assertions: 0,\n  score: 0,\n};\n\nconst ReducerPlayer = (state = INICIAL_STATE, { type, payload }) => {\n  console.log('no reducer', payload.score)\n  switch (type) {\n    case types.SAVE_PLAYER:\n      return { ...state, name: payload.name, gravatarEmail: payload.gravatarEmail };\n    case types.SAVE_SCORE:\n      return { ...state, score: state.score + payload.score, assertions: state.assertions + (payload.score > 0) ? 1 : 0 };\n    default:\n      return state;\n  }\n};\n\nexport default ReducerPlayer;\n"]},"metadata":{},"sourceType":"module"}