{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/GamePage/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport propTypes from 'prop-types';\nimport GameHeader from '../../components/GameHeader';\nimport Loading from '../../components/Loading';\nimport ActionGetQuestions from '../../store/actions/ActionGetQuestions';\n\nclass Game extends Component {\n  componentDidMount() {\n    const {\n      GetQuestions\n    } = this.props;\n    const token = localStorage.getItem('token');\n    console.log('token:', token);\n    GetQuestions(token);\n  } // renderCardQuestion() {\n  //   return (\n  //     <div style={{\n  //       display: 'flex',\n  //       justifyContent: 'center',\n  //     }}\n  //     >\n  //       <div\n  //         className=\"card\"\n  //         style={{\n  //           width: '400px',\n  //         }}\n  //       >\n  //         <GameHeader />\n  //       </div>\n  //     </div>\n  //   );\n  // }\n\n\n  render() {\n    const {\n      questions\n    } = this.props;\n\n    if (questions.length === 0) {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GameHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  ReducerQuestions: {\n    loading,\n    questions\n  }\n}) => ({\n  loading,\n  questions\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  GetQuestions: ActionGetQuestions\n}, dispatch);\n\nGame.propTypes = {\n  GetQuestions: propTypes.func.isRequired,\n  questions: propTypes.arrayOf(propTypes.object).isRequired\n};\nGame.defaultProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/GamePage/index.js"],"names":["React","Component","connect","bindActionCreators","propTypes","GameHeader","Loading","ActionGetQuestions","Game","componentDidMount","GetQuestions","props","token","localStorage","getItem","console","log","render","questions","length","mapStateToProps","ReducerQuestions","loading","mapDispatchToProps","dispatch","func","isRequired","arrayOf","object","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,kBAAP,MAA+B,wCAA/B;;AAEA,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAC3BQ,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKC,KAA9B;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,KAAtB;AACAF,IAAAA,YAAY,CAACE,KAAD,CAAZ;AACD,GAN0B,CAS3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEAK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKP,KAA3B;;AACA,QAAIO,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAvC0B;;AA0C7B,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,gBAAgB,EAAE;AAAEC,IAAAA,OAAF;AAAWJ,IAAAA;AAAX;AAApB,CAAD,MAAmD;AACzEI,EAAAA,OADyE;AAEzEJ,EAAAA;AAFyE,CAAnD,CAAxB;;AAMA,MAAMK,kBAAkB,GAAIC,QAAD,IAAcrB,kBAAkB,CACzD;AACEO,EAAAA,YAAY,EAAEH;AADhB,CADyD,EAGtDiB,QAHsD,CAA3D;;AAMAhB,IAAI,CAACJ,SAAL,GAAiB;AACfM,EAAAA,YAAY,EAAEN,SAAS,CAACqB,IAAV,CAAeC,UADd;AAEfR,EAAAA,SAAS,EAAEd,SAAS,CAACuB,OAAV,CAAkBvB,SAAS,CAACwB,MAA5B,EAAoCF;AAFhC,CAAjB;AAKAlB,IAAI,CAACqB,YAAL,GAAoB,EAApB;AAGA,eAAe3B,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cf,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport propTypes from 'prop-types';\nimport GameHeader from '../../components/GameHeader';\nimport Loading from '../../components/Loading';\nimport ActionGetQuestions from '../../store/actions/ActionGetQuestions';\n\nclass Game extends Component {\n  componentDidMount() {\n    const { GetQuestions } = this.props;\n    const token = localStorage.getItem('token');\n    console.log('token:', token);\n    GetQuestions(token);\n  }\n\n\n  // renderCardQuestion() {\n  //   return (\n  //     <div style={{\n  //       display: 'flex',\n  //       justifyContent: 'center',\n  //     }}\n  //     >\n  //       <div\n  //         className=\"card\"\n  //         style={{\n  //           width: '400px',\n  //         }}\n  //       >\n  //         <GameHeader />\n  //       </div>\n  //     </div>\n\n  //   );\n  // }\n\n  render() {\n    const { questions } = this.props;\n    if (questions.length === 0) {\n      return <Loading />;\n    }\n    return (\n      <div>\n        <GameHeader />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ ReducerQuestions: { loading, questions } }) => ({\n  loading,\n  questions,\n});\n\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    GetQuestions: ActionGetQuestions,\n  }, dispatch,\n);\n\nGame.propTypes = {\n  GetQuestions: propTypes.func.isRequired,\n  questions: propTypes.arrayOf(propTypes.object).isRequired,\n};\n\nGame.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}