{"ast":null,"code":"import _regeneratorRuntime from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Redirect}from'react-router-dom';import{connect}from'react-redux';import{bindActionCreators}from'redux';import'bulma/css/bulma.css';import SettingsButton from'../../components/SettingsButton';import{ActionSubmitLogin,ActionHandleLogin,ActionGetToken,ActionSavePlayer}from'../../store/actions';import GET_GRAVATAR_API from'../../services/GET_GRAVATAR_API';var Login=/*#__PURE__*/function(_React$Component){_inherits(Login,_React$Component);var _super=_createSuper(Login);function Login(props){var _this;_classCallCheck(this,Login);_this=_super.call(this,props);_this.state={};return _this;}_createClass(Login,[{key:\"startGame\",value:function(){var _startGame=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this$props,SubmitLogin,GetToken,email,name,SavePlayer,token,gravatarEmail;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this$props=this.props,SubmitLogin=_this$props.SubmitLogin,GetToken=_this$props.GetToken,email=_this$props.email,name=_this$props.name,SavePlayer=_this$props.SavePlayer;localStorage.removeItem('token');token=localStorage.getItem('token');gravatarEmail=GET_GRAVATAR_API(email);SavePlayer(name,gravatarEmail);if(token){_context.next=8;break;}_context.next=8;return GetToken();case 8:localStorage.removeItem('state');localStorage.setItem('state',JSON.stringify({player:{name:name,gravatarEmail:gravatarEmail,assertions:0,score:0}}));SubmitLogin();case 11:case\"end\":return _context.stop();}}},_callee,this);}));function startGame(){return _startGame.apply(this,arguments);}return startGame;}()},{key:\"renderInputEmail\",value:function renderInputEmail(){var _this$props2=this.props,email=_this$props2.email,HandleLogin=_this$props2.HandleLogin;return/*#__PURE__*/React.createElement(\"div\",{className:\"field\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\",className:\"label\"},\"Email do Gravatar:\"),/*#__PURE__*/React.createElement(\"input\",{htmlFor:\"email\",name:\"email\",value:email,type:\"email\",\"data-testid\":\"input-gravatar-email\",onChange:function onChange(e){return HandleLogin(e.target);},className:\"input\"}));}},{key:\"renderInputName\",value:function renderInputName(){var _this$props3=this.props,name=_this$props3.name,HandleLogin=_this$props3.HandleLogin;return/*#__PURE__*/React.createElement(\"div\",{className:\"field\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"player-name\",className:\"label\"},\"Nome do Jogador:\"),/*#__PURE__*/React.createElement(\"input\",{htmlFor:\"player-name\",name:\"name\",value:name,type:\"text\",\"data-testid\":\"input-player-name\",onChange:function onChange(e){return HandleLogin(e.target);},className:\"input\"}));}},{key:\"renderSubmitButton\",value:function renderSubmitButton(){var _this2=this;var _this$props4=this.props,email=_this$props4.email,name=_this$props4.name;var disabled=name!==''&&email!=='';return/*#__PURE__*/React.createElement(\"button\",{type:\"button\",value:\"Jogar\",\"data-testid\":\"btn-play\",disabled:!disabled,onClick:function onClick(){return _this2.startGame();},className:\"button is-success\"},\"Jogar\");}},{key:\"renderInput\",value:function renderInput(){return/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',justifyContent:'center'}},/*#__PURE__*/React.createElement(\"div\",{className:\"card\",style:{width:'400px'}},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header\"},/*#__PURE__*/React.createElement(SettingsButton,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"card-content\"},this.renderInputEmail(),this.renderInputName()),/*#__PURE__*/React.createElement(\"div\",{className:\"card-content\"},this.renderSubmitButton())));}},{key:\"render\",value:function render(){var logged=this.props.logged;if(logged)return/*#__PURE__*/React.createElement(Redirect,{to:\"/game\"});return this.renderInput();}}]);return Login;}(React.Component);var mapStateToProps=function mapStateToProps(_ref){var _ref$ReducerLogin=_ref.ReducerLogin,name=_ref$ReducerLogin.name,email=_ref$ReducerLogin.email,logged=_ref$ReducerLogin.logged;return{name:name,email:email,logged:logged};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return bindActionCreators({HandleLogin:ActionHandleLogin,SubmitLogin:ActionSubmitLogin,GetToken:ActionGetToken,SavePlayer:ActionSavePlayer},dispatch);};Login.defaultProps={};export default connect(mapStateToProps,mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/lucaswerner/repositories/github-personal/trivia-game/src/pages/LoginPage/index.js"],"names":["React","Redirect","connect","bindActionCreators","SettingsButton","ActionSubmitLogin","ActionHandleLogin","ActionGetToken","ActionSavePlayer","GET_GRAVATAR_API","Login","props","state","SubmitLogin","GetToken","email","name","SavePlayer","localStorage","removeItem","token","getItem","gravatarEmail","setItem","JSON","stringify","player","assertions","score","HandleLogin","e","target","disabled","startGame","display","justifyContent","width","renderInputEmail","renderInputName","renderSubmitButton","logged","renderInput","Component","mapStateToProps","ReducerLogin","mapDispatchToProps","dispatch","defaultProps"],"mappings":"mhCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,kBAAT,KAAmC,OAAnC,CAEA,MAAO,qBAAP,CACA,MAAOC,CAAAA,cAAP,KAA2B,iCAA3B,CACA,OACEC,iBADF,CACqBC,iBADrB,CACwCC,cADxC,CACwDC,gBADxD,KAEO,qBAFP,CAGA,MAAOC,CAAAA,gBAAP,KAA6B,iCAA7B,C,GAEMC,CAAAA,K,0GACJ,eAAYC,KAAZ,CAAmB,uCACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,EAAb,CAFiB,aAGlB,C,2VAKK,KAAKD,K,CADPE,W,aAAAA,W,CAAaC,Q,aAAAA,Q,CAAUC,K,aAAAA,K,CAAOC,I,aAAAA,I,CAAMC,U,aAAAA,U,CAEtCC,YAAY,CAACC,UAAb,CAAwB,OAAxB,EACMC,K,CAAQF,YAAY,CAACG,OAAb,CAAqB,OAArB,C,CACRC,a,CAAgBb,gBAAgB,CAACM,KAAD,C,CACtCE,UAAU,CAACD,IAAD,CAAOM,aAAP,CAAV,C,GACKF,K,+CACGN,CAAAA,QAAQ,E,QAEhBI,YAAY,CAACC,UAAb,CAAwB,OAAxB,EACAD,YAAY,CAACK,OAAb,CAAqB,OAArB,CAA8BC,IAAI,CAACC,SAAL,CAAe,CAC3CC,MAAM,CAAE,CACNV,IAAI,CAAJA,IADM,CACAM,aAAa,CAAbA,aADA,CACeK,UAAU,CAAE,CAD3B,CAC8BC,KAAK,CAAE,CADrC,CADmC,CAAf,CAA9B,EAKAf,WAAW,G,4MAGM,kBACc,KAAKF,KADnB,CACTI,KADS,cACTA,KADS,CACFc,WADE,cACFA,WADE,CAEjB,mBACE,2BAAK,SAAS,CAAC,OAAf,eACE,6BAAO,OAAO,CAAC,OAAf,CAAuB,SAAS,CAAC,OAAjC,uBADF,cAEE,6BACE,OAAO,CAAC,OADV,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAEd,KAHT,CAIE,IAAI,CAAC,OAJP,CAKE,cAAY,sBALd,CAME,QAAQ,CAAE,kBAACe,CAAD,QAAOD,CAAAA,WAAW,CAACC,CAAC,CAACC,MAAH,CAAlB,EANZ,CAOE,SAAS,CAAC,OAPZ,EAFF,CADF,CAcD,C,yDAEiB,kBACc,KAAKpB,KADnB,CACRK,IADQ,cACRA,IADQ,CACFa,WADE,cACFA,WADE,CAEhB,mBACE,2BAAK,SAAS,CAAC,OAAf,eACE,6BAAO,OAAO,CAAC,aAAf,CAA6B,SAAS,CAAC,OAAvC,qBADF,cAEE,6BACE,OAAO,CAAC,aADV,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAEb,IAHT,CAIE,IAAI,CAAC,MAJP,CAKE,cAAY,mBALd,CAME,QAAQ,CAAE,kBAACc,CAAD,QAAOD,CAAAA,WAAW,CAACC,CAAC,CAACC,MAAH,CAAlB,EANZ,CAOE,SAAS,CAAC,OAPZ,EAFF,CADF,CAcD,C,+DAEoB,kCACK,KAAKpB,KADV,CACXI,KADW,cACXA,KADW,CACJC,IADI,cACJA,IADI,CAEnB,GAAMgB,CAAAA,QAAQ,CAAIhB,IAAI,GAAK,EAAT,EAAeD,KAAK,GAAK,EAA3C,CACA,mBACE,8BACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAC,OAFR,CAGE,cAAY,UAHd,CAIE,QAAQ,CAAE,CAACiB,QAJb,CAKE,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACC,SAAL,EAAN,EALX,CAME,SAAS,CAAC,mBANZ,UADF,CAaD,C,iDAEa,CACZ,mBACE,2BACE,KAAK,CAAE,CACLC,OAAO,CAAE,MADJ,CAELC,cAAc,CAAE,QAFX,CADT,eAME,2BACE,SAAS,CAAC,MADZ,CAEE,KAAK,CAAE,CACLC,KAAK,CAAE,OADF,CAFT,eAME,2BAAK,SAAS,CAAC,aAAf,eACE,oBAAC,cAAD,MADF,CANF,cASE,2BAAK,SAAS,CAAC,cAAf,EACG,KAAKC,gBAAL,EADH,CAEG,KAAKC,eAAL,EAFH,CATF,cAaE,2BAAK,SAAS,CAAC,cAAf,EACG,KAAKC,kBAAL,EADH,CAbF,CANF,CADF,CA0BD,C,uCAEQ,IACCC,CAAAA,MADD,CACY,KAAK7B,KADjB,CACC6B,MADD,CAEP,GAAIA,MAAJ,CAAY,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAC,OAAb,EAAP,CAEZ,MAAO,MAAKC,WAAL,EAAP,CACD,C,mBAlHiBzC,KAAK,CAAC0C,S,EAsH1B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,kCACtBC,YADsB,CAEpB5B,IAFoB,mBAEpBA,IAFoB,CAEdD,KAFc,mBAEdA,KAFc,CAEPyB,MAFO,mBAEPA,MAFO,OAIjB,CACLxB,IAAI,CAAJA,IADK,CACCD,KAAK,CAALA,KADD,CACQyB,MAAM,CAANA,MADR,CAJiB,EAAxB,CAQA,GAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAc3C,CAAAA,kBAAkB,CACzD,CACE0B,WAAW,CAAEvB,iBADf,CAEEO,WAAW,CAAER,iBAFf,CAGES,QAAQ,CAAEP,cAHZ,CAIEU,UAAU,CAAET,gBAJd,CADyD,CAMtDsC,QANsD,CAAhC,EAA3B,CAmBApC,KAAK,CAACqC,YAAN,CAAqB,EAArB,CAGA,cAAe7C,CAAAA,OAAO,CAACyC,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CnC,KAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport 'bulma/css/bulma.css';\nimport SettingsButton from '../../components/SettingsButton';\nimport {\n  ActionSubmitLogin, ActionHandleLogin, ActionGetToken, ActionSavePlayer,\n} from '../../store/actions';\nimport GET_GRAVATAR_API from '../../services/GET_GRAVATAR_API';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async startGame() {\n    const {\n      SubmitLogin, GetToken, email, name, SavePlayer,\n    } = this.props;\n    localStorage.removeItem('token');\n    const token = localStorage.getItem('token');\n    const gravatarEmail = GET_GRAVATAR_API(email);\n    SavePlayer(name, gravatarEmail);\n    if (!token) {\n      await GetToken();\n    }\n    localStorage.removeItem('state');\n    localStorage.setItem('state', JSON.stringify({\n      player: {\n        name, gravatarEmail, assertions: 0, score: 0,\n      },\n    }));\n    SubmitLogin();\n  }\n\n  renderInputEmail() {\n    const { email, HandleLogin } = this.props;\n    return (\n      <div className=\"field\">\n        <label htmlFor=\"email\" className=\"label\">Email do Gravatar:</label>\n        <input\n          htmlFor=\"email\"\n          name=\"email\"\n          value={email}\n          type=\"email\"\n          data-testid=\"input-gravatar-email\"\n          onChange={(e) => HandleLogin(e.target)}\n          className=\"input\"\n        />\n      </div>\n    );\n  }\n\n  renderInputName() {\n    const { name, HandleLogin } = this.props;\n    return (\n      <div className=\"field\">\n        <label htmlFor=\"player-name\" className=\"label\">Nome do Jogador:</label>\n        <input\n          htmlFor=\"player-name\"\n          name=\"name\"\n          value={name}\n          type=\"text\"\n          data-testid=\"input-player-name\"\n          onChange={(e) => HandleLogin(e.target)}\n          className=\"input\"\n        />\n      </div>\n    );\n  }\n\n  renderSubmitButton() {\n    const { email, name } = this.props;\n    const disabled = (name !== '' && email !== '');\n    return (\n      <button\n        type=\"button\"\n        value=\"Jogar\"\n        data-testid=\"btn-play\"\n        disabled={!disabled}\n        onClick={() => this.startGame()}\n        className=\"button is-success\"\n      >\n        Jogar\n      </button>\n\n    );\n  }\n\n  renderInput() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <div\n          className=\"card\"\n          style={{\n            width: '400px',\n          }}\n        >\n          <div className=\"card-header\">\n            <SettingsButton />\n          </div>\n          <div className=\"card-content\">\n            {this.renderInputEmail()}\n            {this.renderInputName()}\n          </div>\n          <div className=\"card-content\">\n            {this.renderSubmitButton()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { logged } = this.props;\n    if (logged) return <Redirect to=\"/game\" />;\n\n    return this.renderInput();\n  }\n}\n\n\nconst mapStateToProps = ({\n  ReducerLogin: {\n    name, email, logged,\n  },\n}) => ({\n  name, email, logged,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    HandleLogin: ActionHandleLogin,\n    SubmitLogin: ActionSubmitLogin,\n    GetToken: ActionGetToken,\n    SavePlayer: ActionSavePlayer,\n  }, dispatch,\n);\n\nLogin.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  logged: PropTypes.bool.isRequired,\n  HandleLogin: PropTypes.func.isRequired,\n  SubmitLogin: PropTypes.func.isRequired,\n  GetToken: PropTypes.func.isRequired,\n  SavePlayer: PropTypes.func.isRequired,\n};\n\nLogin.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}