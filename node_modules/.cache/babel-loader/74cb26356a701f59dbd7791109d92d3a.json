{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/LoginPage/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { ActionSubmitLogin, ActionHandleLogin } from '../../store/actions';\n\nconst Input = props => {\n  const name = props.name,\n        email = props.email,\n        HandleLogin = props.HandleLogin,\n        SubmitLogin = props.SubmitLogin;\n  const disabled = name !== '' && email !== '';\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Email do Gravatar:\"), React.createElement(\"input\", {\n    htmlFor: \"email\",\n    name: \"email\",\n    value: email,\n    type: \"email\",\n    \"data-testid\": \"input-gravatar-email\",\n    onChange: e => HandleLogin(e.target),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"player-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Nome do Jogador:\"), React.createElement(\"input\", {\n    htmlFor: \"player-name\",\n    name: \"name\",\n    value: name,\n    type: \"text\",\n    \"data-testid\": \"input-player-name\",\n    onChange: e => HandleLogin(e.target),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    value: \"Jogar\",\n    \"data-testid\": \"btn-play\",\n    disabled: !disabled,\n    onClick: () => SubmitLogin(email),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Jogar\"));\n};\n\nconst Login = props => {\n  if (props.logged) return props.history.push('./game');\n  return Input(props);\n};\n\nconst mapStateToProps = ({\n  ReducerLogin: {\n    name,\n    email,\n    logged,\n    hash\n  }\n}) => ({\n  name,\n  email,\n  logged,\n  hash\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  HandleLogin: ActionHandleLogin,\n  SubmitLogin: ActionSubmitLogin\n}, dispatch);\n\nLogin.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  logged: PropTypes.bool.isRequired,\n  hash: PropTypes.string.isRequired,\n  HandleLogin: PropTypes.func.isRequired,\n  SubmitLogin: PropTypes.func.isRequired\n};\nLogin.defaultProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/LoginPage/index.js"],"names":["React","connect","bindActionCreators","PropTypes","ActionSubmitLogin","ActionHandleLogin","Input","props","name","email","HandleLogin","SubmitLogin","disabled","e","target","Login","logged","history","push","mapStateToProps","ReducerLogin","hash","mapDispatchToProps","dispatch","propTypes","string","isRequired","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { ActionSubmitLogin, ActionHandleLogin } from '../../store/actions';\n\nconst Input = (props) => {\n  const { name, email, HandleLogin, SubmitLogin } = props;\n  const disabled = (name !== '' && email !== '');\n  return (\n    <div>\n      <label htmlFor=\"email\">Email do Gravatar:</label>\n      <input\n        htmlFor=\"email\"\n        name=\"email\"\n        value={email}\n        type=\"email\"\n        data-testid=\"input-gravatar-email\"\n        onChange={(e) => HandleLogin(e.target)}\n      />\n      <label htmlFor=\"player-name\">Nome do Jogador:</label>\n      <input\n        htmlFor=\"player-name\"\n        name=\"name\"\n        value={name}\n        type=\"text\"\n        data-testid=\"input-player-name\"\n        onChange={(e) => HandleLogin(e.target)}\n      />\n      <button type=\"button\" value=\"Jogar\" data-testid=\"btn-play\" disabled={!disabled} onClick={() => SubmitLogin(email)} >Jogar</button>\n    </div>\n  );\n}\n\nconst Login = (props) => {\n  if (props.logged) return props.history.push('./game')\n  return Input(props);\n}\n\n\nconst mapStateToProps = ({\n  ReducerLogin: {\n    name, email, logged, hash } }) =>\n  ({ name, email, logged, hash });\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    HandleLogin: ActionHandleLogin,\n    SubmitLogin: ActionSubmitLogin,\n  }, dispatch,\n);\n\nLogin.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  logged: PropTypes.bool.isRequired,\n  hash: PropTypes.string.isRequired,\n  HandleLogin: PropTypes.func.isRequired,\n  SubmitLogin: PropTypes.func.isRequired,\n};\n\nLogin.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}