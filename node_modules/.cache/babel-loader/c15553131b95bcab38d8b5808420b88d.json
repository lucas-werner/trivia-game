{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/components/GameContent.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../pages/GamePage/GamePage.css';\nimport { ActionStopTimer } from '../store/actions/ActionsTimer';\nimport { ActionSumPoints } from '../store/actions';\n\nclass GameContent extends Component {\n  static compareAnswers(a, b) {\n    const ans1 = a.answer.toUpperCase();\n    const ans2 = b.answer.toUpperCase();\n    let comparison = 0;\n\n    if (ans1 > ans2) {\n      comparison = 1;\n    } else if (ans1 < ans2) {\n      comparison = -1;\n    }\n\n    return comparison;\n  }\n\n  highlightCorrectAnswer() {\n    console.log(this.props);\n    const wrongAnswers = document.getElementsByClassName('wrong-answer');\n    const wrongAnswersArr = [...wrongAnswers];\n    const correctAnswer = document.getElementsByClassName('correct-answer')[0];\n    wrongAnswersArr.map(answer => answer.classList.add('wrong'));\n    correctAnswer.classList.add('correct');\n  }\n\n  difficultyMeasurement(difficulty) {\n    console.log(this.props);\n\n    switch (difficulty) {\n      case 'easy':\n        {\n          return 1;\n        }\n\n      case 'medium':\n        {\n          return 2;\n        }\n\n      case 'hard':\n        {\n          return 3;\n        }\n\n      default:\n        return 0;\n    }\n  }\n\n  saveScore() {\n    const {\n      name,\n      gravatarEmail,\n      assertions,\n      score\n    } = this.props;\n    const obj = {\n      player: {\n        name,\n        gravatarEmail,\n        assertions,\n        score\n      }\n    };\n    localStorage.setItem('state', JSON.stringify(obj));\n  }\n\n  handleAnswer(event) {\n    this.highlightCorrectAnswer();\n    const answerClassList = event.target.classList;\n    const answer = [...answerClassList];\n\n    if (answer.includes('correct-answer')) {\n      this.calculatePoints();\n    }\n  }\n\n  calculatePoints() {\n    const {\n      questions,\n      questionNumber,\n      timer,\n      sumPoints\n    } = this.props;\n    const {\n      difficulty\n    } = questions[questionNumber];\n    const difficultyValue = this.difficultyMeasurement(difficulty);\n    const points = 10 + timer * difficultyValue;\n    sumPoints(points);\n  }\n\n  generateOptions() {\n    const {\n      questions,\n      questionNumber\n    } = this.props;\n    const {\n      correct_answer: correctAnswer,\n      incorrect_answers: incorrectAnswers\n    } = questions[questionNumber];\n    const options = [{\n      answer: correctAnswer,\n      isCorrect: true\n    }];\n    incorrectAnswers.map(answer => options.push({\n      answer,\n      isCorrect: false\n    }));\n    return options.sort(GameContent.compareAnswers);\n  }\n\n  renderQuestions() {\n    const {\n      questions,\n      questionNumber\n    } = this.props;\n    const {\n      category,\n      question\n    } = questions[questionNumber];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-content-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"question-category\",\n      className: \"game-content-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, decodeURIComponent(category)), /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, decodeURIComponent(question))));\n  }\n\n  renderOptions() {\n    const {\n      timer,\n      stopTimer,\n      toStopTimer\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-content-answers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, this.generateOptions().map((object, i) => /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": object.isCorrect ? 'correct-answer' : `wrong-answer-${i}`,\n      type: \"button\",\n      className: `button is-fullwidth \n                ${object.isCorrect ? 'correct-answer' : 'wrong-answer'}`,\n      onClick: event => {\n        this.handleAnswer(event);\n        toStopTimer();\n      },\n      disabled: timer === 0 || stopTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, decodeURIComponent(object.answer))));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, this.renderQuestions(), this.renderOptions());\n  }\n\n}\n\nconst mapStateToProps = ({\n  ReducerQuestions: {\n    questions,\n    questionNumber\n  },\n  ReducerTimer: {\n    timer,\n    stopTimer\n  },\n  ReducerPlayer: {\n    name,\n    gravatarEmail,\n    assertions,\n    score\n  }\n}) => ({\n  questionNumber,\n  questions,\n  timer,\n  stopTimer,\n  name,\n  gravatarEmail,\n  assertions,\n  score\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  toStopTimer: ActionStopTimer,\n  sumPoints: ActionSumPoints\n}, dispatch);\n\nGameContent.propTypes = {\n  questionNumber: PropTypes.number.isRequired,\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  timer: PropTypes.number.isRequired,\n  sumPoints: PropTypes.func.isRequired,\n  stopTimer: PropTypes.bool.isRequired,\n  toStopTimer: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  gravatarEmail: PropTypes.string.isRequired,\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired\n};\nGameContent.defaultProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(GameContent);","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/components/GameContent.js"],"names":["React","Component","bindActionCreators","connect","PropTypes","ActionStopTimer","ActionSumPoints","GameContent","compareAnswers","a","b","ans1","answer","toUpperCase","ans2","comparison","highlightCorrectAnswer","console","log","props","wrongAnswers","document","getElementsByClassName","wrongAnswersArr","correctAnswer","map","classList","add","difficultyMeasurement","difficulty","saveScore","name","gravatarEmail","assertions","score","obj","player","localStorage","setItem","JSON","stringify","handleAnswer","event","answerClassList","target","includes","calculatePoints","questions","questionNumber","timer","sumPoints","difficultyValue","points","generateOptions","correct_answer","incorrect_answers","incorrectAnswers","options","isCorrect","push","sort","renderQuestions","category","question","decodeURIComponent","renderOptions","stopTimer","toStopTimer","object","i","render","mapStateToProps","ReducerQuestions","ReducerTimer","ReducerPlayer","mapDispatchToProps","dispatch","propTypes","number","isRequired","arrayOf","func","bool","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../pages/GamePage/GamePage.css';\nimport { ActionStopTimer } from '../store/actions/ActionsTimer';\nimport { ActionSumPoints } from '../store/actions';\n\nclass GameContent extends Component {\n  static compareAnswers(a, b) {\n    const ans1 = a.answer.toUpperCase();\n    const ans2 = b.answer.toUpperCase();\n    let comparison = 0;\n    if (ans1 > ans2) {\n      comparison = 1;\n    } else if (ans1 < ans2) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n  highlightCorrectAnswer() {\n    console.log(this.props);\n    const wrongAnswers = document.getElementsByClassName('wrong-answer');\n    const wrongAnswersArr = [...wrongAnswers];\n    const correctAnswer = document.getElementsByClassName('correct-answer')[0];\n    wrongAnswersArr.map((answer) => answer.classList.add('wrong'));\n    correctAnswer.classList.add('correct');\n  }\n\n  difficultyMeasurement(difficulty) {\n    console.log(this.props);\n    switch (difficulty) {\n      case 'easy': {\n        return 1;\n      }\n      case 'medium': {\n        return 2;\n      }\n      case 'hard': {\n        return 3;\n      }\n      default: return 0;\n    }\n  }\n\n  saveScore() {\n    const {\n      name,\n      gravatarEmail,\n      assertions, score,\n    } = this.props;\n    const obj = {\n      player: {\n        name, gravatarEmail, assertions, score,\n      },\n    };\n    localStorage.setItem('state', JSON.stringify(obj));\n  }\n\n  handleAnswer(event) {\n    this.highlightCorrectAnswer();\n    const answerClassList = event.target.classList;\n    const answer = [...answerClassList];\n    if (answer.includes('correct-answer')) {\n      this.calculatePoints();\n    }\n  }\n\n  calculatePoints() {\n    const {\n      questions,\n      questionNumber,\n      timer, sumPoints,\n    } = this.props;\n    const { difficulty } = questions[questionNumber];\n    const difficultyValue = this.difficultyMeasurement(difficulty);\n    const points = 10 + (timer * difficultyValue);\n    sumPoints(points);\n  }\n\n  generateOptions() {\n    const { questions, questionNumber } = this.props;\n    const {\n      correct_answer: correctAnswer,\n      incorrect_answers: incorrectAnswers,\n    } = questions[questionNumber];\n    const options = [{\n      answer: correctAnswer,\n      isCorrect: true,\n    }];\n    incorrectAnswers.map((answer) => options.push({\n      answer,\n      isCorrect: false,\n    }));\n    return options.sort(GameContent.compareAnswers);\n  }\n\n  renderQuestions() {\n    const { questions, questionNumber } = this.props;\n    const { category, question } = questions[questionNumber];\n    return (\n      <div className=\"game-content-question\">\n        <div data-testid=\"question-category\" className=\"game-content-category\">\n          {decodeURIComponent(category)}\n        </div>\n        <div data-testid=\"question-text\">\n          <p>{decodeURIComponent(question)}</p>\n        </div>\n      </div>\n    );\n  }\n\n  renderOptions() {\n    const { timer, stopTimer, toStopTimer } = this.props;\n    return (\n      <div className=\"game-content-answers\">\n        {this.generateOptions().map(\n          (object, i) => (\n            <button\n              data-testid={object.isCorrect ? 'correct-answer' : `wrong-answer-${i}`}\n              type=\"button\"\n              className={`button is-fullwidth \n                ${object.isCorrect ? 'correct-answer' : 'wrong-answer'}`}\n              onClick={(event) => {\n                this.handleAnswer(event);\n                toStopTimer();\n              }}\n              disabled={(timer === 0 || stopTimer)}\n            >\n              {decodeURIComponent(object.answer)}\n            </button>\n          ),\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"game-content\">\n        {this.renderQuestions()}\n        {this.renderOptions()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (\n  {\n    ReducerQuestions: { questions, questionNumber },\n    ReducerTimer: { timer, stopTimer },\n    ReducerPlayer: {\n      name,\n      gravatarEmail,\n      assertions,\n      score,\n    },\n  },\n) => ({\n  questionNumber,\n  questions,\n  timer,\n  stopTimer,\n  name,\n  gravatarEmail,\n  assertions,\n  score,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    toStopTimer: ActionStopTimer,\n    sumPoints: ActionSumPoints,\n  }, dispatch,\n);\n\nGameContent.propTypes = {\n  questionNumber: PropTypes.number.isRequired,\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  timer: PropTypes.number.isRequired,\n  sumPoints: PropTypes.func.isRequired,\n  stopTimer: PropTypes.bool.isRequired,\n  toStopTimer: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  gravatarEmail: PropTypes.string.isRequired,\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nGameContent.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameContent);\n"]},"metadata":{},"sourceType":"module"}