{"ast":null,"code":"import _toConsumableArray from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{bindActionCreators}from'redux';import{Link}from'react-router-dom';import Timer from'./Timer';import{ActionResetTimer}from'../store/actions/ActionsTimer';import{ActionNextQuestion,ActionLogout}from'../store/actions';var GameFooter=/*#__PURE__*/function(_Component){_inherits(GameFooter,_Component);var _super=_createSuper(GameFooter);function GameFooter(props){var _this;_classCallCheck(this,GameFooter);_this=_super.call(this,props);_this.state={};return _this;}_createClass(GameFooter,[{key:\"getRanking\",value:function getRanking(){var _this$props=this.props,name=_this$props.name,gravatarEmail=_this$props.gravatarEmail,score=_this$props.score;var newPlayer={name:name,gravatarEmail:gravatarEmail,score:score};var previousRanking=localStorage.getItem('ranking')!==null?JSON.parse(localStorage.getItem('ranking')):null;if(previousRanking===null){return[newPlayer];}return[].concat(_toConsumableArray(previousRanking),[newPlayer]).sort(function(a,b){return b.score-a.score;});}},{key:\"updateRanking\",value:function updateRanking(){var newRanking=this.getRanking();localStorage.setItem('ranking',JSON.stringify(newRanking));}},{key:\"endGame\",value:function endGame(){var Logout=this.props.Logout;this.updateRanking();Logout();}},{key:\"nextQuestion\",value:function nextQuestion(){var ChangeQuestion=this.props.ChangeQuestion;ChangeQuestion();this.removeCorrectAnswerHighlight();}},{key:\"removeCorrectAnswerHighlight\",value:function removeCorrectAnswerHighlight(){console.log(this.props);var wrongAnswers=document.getElementsByClassName('wrong-answer');var wrongAnswersArr=_toConsumableArray(wrongAnswers);var correctAnswer=document.getElementsByClassName('correct-answer')[0];wrongAnswersArr.map(function(answer){return answer.classList.remove('wrong');});correctAnswer.classList.remove('correct');}},{key:\"renderButtonNextQuestion\",value:function renderButtonNextQuestion(){var _this2=this;var _this$props2=this.props,questionNumber=_this$props2.questionNumber,ResetTimer=_this$props2.ResetTimer;if(questionNumber===4){return/*#__PURE__*/React.createElement(Link,{to:\"/feedback\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"button is-info card-footer-item\",\"data-testid\":\"btn-next\",onClick:function onClick(){return _this2.endGame();}},\"FINALIZAR\"));}return/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"button is-info card-footer-item\",onClick:function onClick(){_this2.nextQuestion();ResetTimer();},\"data-testid\":\"btn-next\"},\"PR\\xD3XIMA\");}},{key:\"render\",value:function render(){var stopTimer=this.props.stopTimer;return/*#__PURE__*/React.createElement(\"div\",{className:\"card-footer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-footer-item\"},/*#__PURE__*/React.createElement(Timer,null)),/*#__PURE__*/React.createElement(\"div\",null,stopTimer&&this.renderButtonNextQuestion()));}}]);return GameFooter;}(Component);var mapStateToProps=function mapStateToProps(_ref){var _ref$ReducerTimer=_ref.ReducerTimer,timer=_ref$ReducerTimer.timer,stopTimer=_ref$ReducerTimer.stopTimer,questionNumber=_ref.ReducerQuestions.questionNumber,_ref$ReducerPlayer=_ref.ReducerPlayer,name=_ref$ReducerPlayer.name,gravatarEmail=_ref$ReducerPlayer.gravatarEmail,assertions=_ref$ReducerPlayer.assertions,score=_ref$ReducerPlayer.score;return{timer:timer,questionNumber:questionNumber,name:name,gravatarEmail:gravatarEmail,assertions:assertions,score:score,stopTimer:stopTimer};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return bindActionCreators({ResetTimer:ActionResetTimer,ChangeQuestion:ActionNextQuestion,Logout:ActionLogout},dispatch);};GameFooter.defaultProps={};export default connect(mapStateToProps,mapDispatchToProps)(GameFooter);","map":{"version":3,"sources":["/home/lucaswerner/repositories/github-personal/trivia-game/src/components/GameFooter.js"],"names":["React","Component","connect","bindActionCreators","Link","Timer","ActionResetTimer","ActionNextQuestion","ActionLogout","GameFooter","props","state","name","gravatarEmail","score","newPlayer","previousRanking","localStorage","getItem","JSON","parse","sort","a","b","newRanking","getRanking","setItem","stringify","Logout","updateRanking","ChangeQuestion","removeCorrectAnswerHighlight","console","log","wrongAnswers","document","getElementsByClassName","wrongAnswersArr","correctAnswer","map","answer","classList","remove","questionNumber","ResetTimer","endGame","nextQuestion","stopTimer","renderButtonNextQuestion","mapStateToProps","ReducerTimer","timer","ReducerQuestions","ReducerPlayer","assertions","mapDispatchToProps","dispatch","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Timer from './Timer';\nimport { ActionResetTimer } from '../store/actions/ActionsTimer';\nimport { ActionNextQuestion, ActionLogout } from '../store/actions';\n\n\nclass GameFooter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  getRanking() {\n    const {\n      name,\n      gravatarEmail,\n      score,\n    } = this.props;\n    const newPlayer = { name, gravatarEmail, score };\n    const previousRanking = localStorage.getItem('ranking') !== null ? JSON.parse(localStorage.getItem('ranking')) : null;\n    if (previousRanking === null) {\n      return [\n        newPlayer,\n      ];\n    }\n    return [\n      ...previousRanking,\n      newPlayer,\n    ].sort((a, b) => b.score - a.score);\n  }\n\n  updateRanking() {\n    const newRanking = this.getRanking();\n    localStorage.setItem('ranking', JSON.stringify(newRanking));\n  }\n\n\n  endGame() {\n    const { Logout } = this.props;\n    this.updateRanking();\n    Logout();\n  }\n\n  nextQuestion() {\n    const { ChangeQuestion } = this.props;\n    ChangeQuestion();\n    this.removeCorrectAnswerHighlight();\n  }\n\n  removeCorrectAnswerHighlight() {\n    console.log(this.props);\n    const wrongAnswers = document.getElementsByClassName('wrong-answer');\n    const wrongAnswersArr = [...wrongAnswers];\n    const correctAnswer = document.getElementsByClassName('correct-answer')[0];\n    wrongAnswersArr.map((answer) => answer.classList.remove('wrong'));\n    correctAnswer.classList.remove('correct');\n  }\n\n  renderButtonNextQuestion() {\n    const { questionNumber, ResetTimer } = this.props;\n    if (questionNumber === 4) {\n      return (\n        <Link to=\"/feedback\">\n          <button\n            type=\"button\"\n            className=\"button is-info card-footer-item\"\n            data-testid=\"btn-next\"\n            onClick={() => this.endGame()}\n          >\n            FINALIZAR\n          </button>\n        </Link>\n      );\n    }\n    return (\n      <button\n        type=\"button\"\n        className=\"button is-info card-footer-item\"\n        onClick={() => {\n          this.nextQuestion();\n          ResetTimer();\n        }}\n        data-testid=\"btn-next\"\n      >\n        PRÓXIMA\n      </button>\n    );\n  }\n\n  render() {\n    const { stopTimer } = this.props;\n    return (\n      <div className=\"card-footer\">\n        <div className=\"card-footer-item\">\n          <Timer />\n        </div>\n        <div>\n          {stopTimer && this.renderButtonNextQuestion()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  ReducerTimer: { timer, stopTimer },\n  ReducerQuestions: { questionNumber },\n  ReducerPlayer: {\n    name,\n    gravatarEmail,\n    assertions,\n    score,\n  },\n}) => ({\n  timer,\n  questionNumber,\n  name,\n  gravatarEmail,\n  assertions,\n  score,\n  stopTimer,\n});\n\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    ResetTimer: ActionResetTimer,\n    ChangeQuestion: ActionNextQuestion,\n    Logout: ActionLogout,\n  }, dispatch,\n);\n\nGameFooter.propTypes = {\n  ResetTimer: PropTypes.func.isRequired,\n  ChangeQuestion: PropTypes.func.isRequired,\n  questionNumber: PropTypes.number.isRequired,\n  stopTimer: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  gravatarEmail: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  Logout: PropTypes.func.isRequired,\n};\n\nGameFooter.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameFooter);\n"]},"metadata":{},"sourceType":"module"}