{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/components/GameContent.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { ActionStopTimer } from '../store/actions/ActionsTimer';\nimport { ActionSaveScore } from '../store/actions';\nimport '../pages/GamePage/GamePage.css';\n\nclass GameContent extends Component {\n  static compareAnswers(a, b) {\n    const ans1 = a.answer.toUpperCase();\n    const ans2 = b.answer.toUpperCase();\n    let comparison = 0;\n\n    if (ans1 > ans2) {\n      comparison = 1;\n    } else if (ans1 < ans2) {\n      comparison = -1;\n    }\n\n    return comparison;\n  }\n\n  highlightCorrectAnswer() {\n    console.log(this);\n    const wrongAnswers = document.getElementsByClassName('wrong-answer');\n    const wrongAnswersArr = [...wrongAnswers];\n    const correctAnswer = document.getElementsByClassName('correct-answer')[0];\n    wrongAnswersArr.map(answer => answer.classList.add('wrong'));\n    correctAnswer.classList.add('correct');\n  }\n\n  difficultyMeasurement(difficulty) {\n    console.log(this.props);\n\n    switch (difficulty) {\n      case 'easy':\n        {\n          return 1;\n        }\n\n      case 'medium':\n        {\n          return 2;\n        }\n\n      case 'hard':\n        {\n          return 3;\n        }\n\n      default:\n        return 0;\n    }\n  }\n\n  calculatePoints() {\n    const {\n      questions,\n      questionNumber,\n      timer,\n      saveScore\n    } = this.props;\n    const {\n      difficulty\n    } = questions[questionNumber];\n    const difficultyValue = this.difficultyMeasurement(difficulty);\n    const points = 10 + timer * difficultyValue;\n    return saveScore(points);\n  }\n\n  submitAnswer(e) {\n    this.highlightCorrectAnswer();\n    const answerClassList = e.target.classList;\n    const answer = [...answerClassList];\n\n    if (answer.includes('correct-answer')) {\n      this.calculatePoints();\n    }\n  }\n\n  generateOptions() {\n    const {\n      questions,\n      questionNumber\n    } = this.props;\n    const {\n      correct_answer: correctAnswer,\n      incorrect_answers: incorrectAnswers\n    } = questions[questionNumber];\n    const options = [{\n      answer: correctAnswer,\n      isCorrect: true\n    }];\n    incorrectAnswers.map(answer => options.push({\n      answer,\n      isCorrect: false\n    }));\n    return options.sort(GameContent.compareAnswers);\n  }\n\n  renderQuestions() {\n    const {\n      questions,\n      questionNumber\n    } = this.props;\n    const {\n      category,\n      question\n    } = questions[questionNumber];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-content-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"question-category\",\n      className: \"game-content-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, decodeURIComponent(category)), /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, decodeURIComponent(question))));\n  }\n\n  renderOptions() {\n    const {\n      timer,\n      toStopTimer,\n      stopTimer\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-content-answers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, this.generateOptions().map((object, i) => /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": object.isCorrect ? 'correct-answer' : `wrong-answer-${i}`,\n      type: \"button\",\n      value: object.isCorrect,\n      className: `button is-fullwidth \n                ${object.isCorrect ? 'correct-answer' : 'wrong-answer'}`,\n      onClick: e => {\n        this.submitAnswer(e);\n        toStopTimer();\n      },\n      disabled: timer === 0 || stopTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, decodeURIComponent(object.answer))));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, this.renderQuestions(), this.renderOptions());\n  }\n\n}\n\nconst mapStateToProps = ({\n  ReducerQuestions: {\n    questions,\n    questionNumber\n  },\n  ReducerTimer: {\n    timer,\n    stopTimer\n  }\n}) => ({\n  questionNumber,\n  questions,\n  timer,\n  stopTimer\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  toStopTimer: ActionStopTimer,\n  saveScore: ActionSaveScore\n}, dispatch);\n\nGameContent.propTypes = {\n  questionNumber: propTypes.number.isRequired,\n  questions: propTypes.arrayOf(propTypes.object).isRequired,\n  timer: propTypes.number.isRequired\n};\nGameContent.defaultProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(GameContent);","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/components/GameContent.js"],"names":["React","Component","bindActionCreators","connect","propTypes","ActionStopTimer","ActionSaveScore","GameContent","compareAnswers","a","b","ans1","answer","toUpperCase","ans2","comparison","highlightCorrectAnswer","console","log","wrongAnswers","document","getElementsByClassName","wrongAnswersArr","correctAnswer","map","classList","add","difficultyMeasurement","difficulty","props","calculatePoints","questions","questionNumber","timer","saveScore","difficultyValue","points","submitAnswer","e","answerClassList","target","includes","generateOptions","correct_answer","incorrect_answers","incorrectAnswers","options","isCorrect","push","sort","renderQuestions","category","question","decodeURIComponent","renderOptions","toStopTimer","stopTimer","object","i","render","mapStateToProps","ReducerQuestions","ReducerTimer","mapDispatchToProps","dispatch","number","isRequired","arrayOf","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { ActionStopTimer } from '../store/actions/ActionsTimer';\nimport { ActionSaveScore } from '../store/actions';\nimport '../pages/GamePage/GamePage.css';\n\nclass GameContent extends Component {\n  static compareAnswers(a, b) {\n    const ans1 = a.answer.toUpperCase();\n    const ans2 = b.answer.toUpperCase();\n    let comparison = 0;\n    if (ans1 > ans2) {\n      comparison = 1;\n    } else if (ans1 < ans2) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n  highlightCorrectAnswer() {\n    console.log(this);\n    const wrongAnswers = document.getElementsByClassName('wrong-answer');\n    const wrongAnswersArr = [...wrongAnswers];\n    const correctAnswer = document.getElementsByClassName('correct-answer')[0];\n    wrongAnswersArr.map((answer) => answer.classList.add('wrong'));\n    correctAnswer.classList.add('correct');\n  }\n\n  difficultyMeasurement(difficulty) {\n    console.log(this.props);\n    switch (difficulty) {\n      case 'easy': {\n        return 1;\n      }\n      case 'medium': {\n        return 2;\n      }\n      case 'hard': {\n        return 3;\n      }\n      default: return 0;\n    }\n  }\n\n  calculatePoints() {\n    const { questions, questionNumber, timer, saveScore } = this.props;\n    const { difficulty } = questions[questionNumber];\n    const difficultyValue = this.difficultyMeasurement(difficulty);\n    const points = 10 + (timer * difficultyValue);\n    return saveScore(points);\n  }\n\n  submitAnswer(e) {\n    this.highlightCorrectAnswer();\n    const answerClassList = e.target.classList;\n    const answer = [...answerClassList];\n    if (answer.includes('correct-answer')) {\n      this.calculatePoints();\n    }\n  }\n\n  generateOptions() {\n    const { questions, questionNumber } = this.props;\n    const {\n      correct_answer: correctAnswer,\n      incorrect_answers: incorrectAnswers,\n    } = questions[questionNumber];\n    const options = [{\n      answer: correctAnswer,\n      isCorrect: true,\n    }];\n    incorrectAnswers.map((answer) => options.push({\n      answer,\n      isCorrect: false,\n    }));\n    return options.sort(GameContent.compareAnswers);\n  }\n\n  renderQuestions() {\n    const { questions, questionNumber } = this.props;\n    const { category, question } = questions[questionNumber];\n    return (\n      <div className=\"game-content-question\">\n        <div data-testid=\"question-category\" className=\"game-content-category\">\n          {decodeURIComponent(category)}\n        </div>\n        <div data-testid=\"question-text\">\n          <p>{decodeURIComponent(question)}</p>\n        </div>\n      </div>\n    );\n  }\n\n  renderOptions() {\n    const { timer, toStopTimer, stopTimer } = this.props;\n    return (\n      <div className=\"game-content-answers\">\n        {this.generateOptions().map(\n          (object, i) => (\n            <button\n              data-testid={object.isCorrect ? 'correct-answer' : `wrong-answer-${i}`}\n              type=\"button\"\n              value={object.isCorrect}\n              className={`button is-fullwidth \n                ${object.isCorrect ? 'correct-answer' : 'wrong-answer'}`}\n              onClick={(e) => {\n                this.submitAnswer(e);\n                toStopTimer();\n              }}\n              disabled={(timer === 0 || stopTimer)}\n            >\n              {decodeURIComponent(object.answer)}\n            </button>\n          ),\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"game-content\">\n        {this.renderQuestions()}\n        {this.renderOptions()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (\n  {\n    ReducerQuestions: { questions, questionNumber },\n    ReducerTimer: { timer, stopTimer },\n  },\n) => ({\n  questionNumber,\n  questions,\n  timer,\n  stopTimer,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    toStopTimer: ActionStopTimer,\n    saveScore: ActionSaveScore,\n  }, dispatch,\n);\n\nGameContent.propTypes = {\n  questionNumber: propTypes.number.isRequired,\n  questions: propTypes.arrayOf(propTypes.object).isRequired,\n  timer: propTypes.number.isRequired,\n};\n\nGameContent.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameContent);\n"]},"metadata":{},"sourceType":"module"}