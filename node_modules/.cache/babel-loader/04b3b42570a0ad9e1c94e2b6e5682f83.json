{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/LoginPage/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { ActionSubmitLogin, ActionHandleLogin } from '../../store/actions';\nimport SettingsButton from '../../components/SettingsButton';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  renderInputEmail() {\n    const _this$props = this.props,\n          email = _this$props.email,\n          HandleLogin = _this$props.HandleLogin;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Email do Gravatar:\"), React.createElement(\"input\", {\n      htmlFor: \"email\",\n      name: \"email\",\n      value: email,\n      type: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: e => HandleLogin(e.target),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  }\n\n  renderInputName() {\n    const _this$props2 = this.props,\n          name = _this$props2.name,\n          HandleLogin = _this$props2.HandleLogin;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"player-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Nome do Jogador:\"), React.createElement(\"input\", {\n      htmlFor: \"player-name\",\n      name: \"name\",\n      value: name,\n      type: \"text\",\n      \"data-testid\": \"input-player-name\",\n      onChange: e => HandleLogin(e.target),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n  renderSubmitButton() {\n    const _this$props3 = this.props,\n          SubmitLogin = _this$props3.SubmitLogin,\n          email = _this$props3.email,\n          name = _this$props3.name;\n    const disabled = name !== '' && email !== '';\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      value: \"Jogar\",\n      \"data-testid\": \"btn-play\",\n      disabled: !disabled,\n      onClick: () => SubmitLogin(email),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Jogar\"));\n  }\n\n  renderInput() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(SettingsButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), this.renderInputEmail(), this.renderInputName(), this.renderSubmitButton());\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          logged = _this$props4.logged,\n          hash = _this$props4.hash;\n    if (logged) return React.createElement(\"img\", {\n      src: hash,\n      alt: \"hash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    });\n    return this.renderInput();\n  }\n\n}\n\nconst mapStateToProps = ({\n  ReducerLogin: {\n    name,\n    email,\n    logged,\n    hash\n  }\n}) => ({\n  name,\n  email,\n  logged,\n  hash\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  HandleLogin: ActionHandleLogin,\n  SubmitLogin: ActionSubmitLogin\n}, dispatch);\n\nLogin.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  logged: PropTypes.bool.isRequired,\n  hash: PropTypes.string.isRequired,\n  HandleLogin: PropTypes.func.isRequired,\n  SubmitLogin: PropTypes.func.isRequired\n};\nLogin.defaultProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/LoginPage/index.js"],"names":["React","connect","bindActionCreators","PropTypes","ActionSubmitLogin","ActionHandleLogin","SettingsButton","Login","Component","constructor","props","state","renderInputEmail","email","HandleLogin","e","target","renderInputName","name","renderSubmitButton","SubmitLogin","disabled","renderInput","render","logged","hash","mapStateToProps","ReducerLogin","mapDispatchToProps","dispatch","propTypes","string","isRequired","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { ActionSubmitLogin, ActionHandleLogin } from '../../store/actions';\nimport SettingsButton from '../../components/SettingsButton';\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  renderInputEmail() {\n    const { email, HandleLogin } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"email\">Email do Gravatar:</label>\n        <input\n          htmlFor=\"email\"\n          name=\"email\"\n          value={email}\n          type=\"email\"\n          data-testid=\"input-gravatar-email\"\n          onChange={(e) => HandleLogin(e.target)}\n        />\n      </div>\n    );\n  }\n\n  renderInputName() {\n    const { name, HandleLogin } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"player-name\">Nome do Jogador:</label>\n        <input\n          htmlFor=\"player-name\"\n          name=\"name\"\n          value={name}\n          type=\"text\"\n          data-testid=\"input-player-name\"\n          onChange={(e) => HandleLogin(e.target)}\n        />\n      </div>\n    );\n  }\n\n  renderSubmitButton() {\n    const { SubmitLogin, email, name } = this.props;\n    const disabled = (name !== '' && email !== '');\n    return (\n      <div>\n        <button\n          type=\"button\"\n          value=\"Jogar\"\n          data-testid=\"btn-play\"\n          disabled={!disabled}\n          onClick={() => SubmitLogin(email)}\n        >\n          Jogar\n        </button>\n      </div>\n    );\n  }\n\n  renderInput() {\n    return (\n      <div>\n        <SettingsButton />\n        {this.renderInputEmail()}\n        {this.renderInputName()}\n        {this.renderSubmitButton()}\n      </div>\n    );\n  }\n\n  render() {\n    const { logged, hash } = this.props;\n    if (logged) return <img src={hash} alt=\"hash\" />;\n    return this.renderInput();\n  }\n}\n\n\nconst mapStateToProps = ({\n  ReducerLogin: {\n    name, email, logged, hash,\n  },\n}) => ({\n  name, email, logged, hash,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    HandleLogin: ActionHandleLogin,\n    SubmitLogin: ActionSubmitLogin,\n  }, dispatch,\n);\n\nLogin.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  logged: PropTypes.bool.isRequired,\n  hash: PropTypes.string.isRequired,\n  HandleLogin: PropTypes.func.isRequired,\n  SubmitLogin: PropTypes.func.isRequired,\n};\n\nLogin.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}