{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/GamePage/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport propTypes from 'prop-types';\nimport SettingsButton from '../../components/SettingsButton';\nimport Loading from '../../components/Loading';\nimport ActionGetQuestions from '../../store/actions/ActionGetQuestions';\n\nclass Game extends Component {\n  componentDidMount() {\n    const {\n      GetQuestions\n    } = this.props;\n    const token = localStorage.getItem('token');\n    console.log('token:', token);\n    GetQuestions(token);\n  }\n\n  renderQuestions() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        width: '400px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SettingsButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, this.renderInputEmail(), this.renderInputName()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, this.renderSubmitButton())));\n  }\n\n  render() {\n    const {\n      questions\n    } = this.props;\n\n    if (questions.length === 0) {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, this.renderQuestions());\n  }\n\n}\n\nGame.propTypes = {\n  GetQuestions: propTypes.func.isRequired,\n  questions: propTypes.arrayOf(propTypes.object).isRequired\n};\n\nconst mapStateToProps = ({\n  ReducerQuestions: {\n    loading,\n    questions\n  }\n}) => ({\n  loading,\n  questions\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  GetQuestions: ActionGetQuestions\n}, dispatch);\n\nGame.propTypes = {};\nGame.defaultProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/GamePage/index.js"],"names":["React","Component","connect","bindActionCreators","propTypes","SettingsButton","Loading","ActionGetQuestions","Game","componentDidMount","GetQuestions","props","token","localStorage","getItem","console","log","renderQuestions","display","justifyContent","width","renderInputEmail","renderInputName","renderSubmitButton","render","questions","length","func","isRequired","arrayOf","object","mapStateToProps","ReducerQuestions","loading","mapDispatchToProps","dispatch","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,kBAAP,MAA+B,wCAA/B;;AAEA,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAC3BQ,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKC,KAA9B;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,KAAtB;AACAF,IAAAA,YAAY,CAACE,KAAD,CAAZ;AACD;;AAGDK,EAAAA,eAAe,GAAG;AAChB,wBACE;AAAK,MAAA,KAAK,EAAE;AACVC,QAAAA,OAAO,EAAE,MADC;AAEVC,QAAAA,cAAc,EAAE;AAFN,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE;AADF,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,eASE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,gBAAL,EADH,EAEG,KAAKC,eAAL,EAFH,CATF,eAaE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,kBAAL,EADH,CAbF,CAJF,CADF;AAwBD;;AAKDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKd,KAA3B;;AACA,QAAIc,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,eAAL,EADH,CADF;AAKD;;AAjD0B;;AAoD7BT,IAAI,CAACJ,SAAL,GAAiB;AACfM,EAAAA,YAAY,EAAEN,SAAS,CAACuB,IAAV,CAAeC,UADd;AAEfH,EAAAA,SAAS,EAAErB,SAAS,CAACyB,OAAV,CAAkBzB,SAAS,CAAC0B,MAA5B,EAAoCF;AAFhC,CAAjB;;AAKA,MAAMG,eAAe,GAAG,CAAC;AAAEC,EAAAA,gBAAgB,EAAE;AAAEC,IAAAA,OAAF;AAAWR,IAAAA;AAAX;AAApB,CAAD,MAAmD;AACzEQ,EAAAA,OADyE;AAEzER,EAAAA;AAFyE,CAAnD,CAAxB;;AAMA,MAAMS,kBAAkB,GAAIC,QAAD,IAAchC,kBAAkB,CACzD;AACEO,EAAAA,YAAY,EAAEH;AADhB,CADyD,EAGtD4B,QAHsD,CAA3D;;AAMA3B,IAAI,CAACJ,SAAL,GAAiB,EAAjB;AAGAI,IAAI,CAAC4B,YAAL,GAAoB,EAApB;AAGA,eAAelC,OAAO,CAAC6B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1B,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport propTypes from 'prop-types';\nimport SettingsButton from '../../components/SettingsButton';\nimport Loading from '../../components/Loading';\nimport ActionGetQuestions from '../../store/actions/ActionGetQuestions';\n\nclass Game extends Component {\n  componentDidMount() {\n    const { GetQuestions } = this.props;\n    const token = localStorage.getItem('token');\n    console.log('token:', token);\n    GetQuestions(token);\n  }\n\n\n  renderQuestions() {\n    return (\n      <div style={{\n        display: 'flex',\n        justifyContent: 'center',\n      }}>\n        <div\n          className=\"card\"\n          style={{\n            width: '400px',\n          }}\n        >\n          <div className=\"card-header\">\n            <SettingsButton />\n          </div>\n          <div className=\"card-content\">\n            {this.renderInputEmail()}\n            {this.renderInputName()}\n          </div>\n          <div className=\"card-content\">\n            {this.renderSubmitButton()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n\n\n  render() {\n    const { questions } = this.props;\n    if (questions.length === 0) {\n      return <Loading />;\n    }\n    return (\n      <div>\n        {this.renderQuestions()}\n      </div>\n    );\n  }\n}\n\nGame.propTypes = {\n  GetQuestions: propTypes.func.isRequired,\n  questions: propTypes.arrayOf(propTypes.object).isRequired,\n};\n\nconst mapStateToProps = ({ ReducerQuestions: { loading, questions } }) => ({\n  loading,\n  questions,\n});\n\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    GetQuestions: ActionGetQuestions,\n  }, dispatch,\n);\n\nGame.propTypes = {\n};\n\nGame.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}