{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Game from './Game';\nimport { ActionSubmitLogin, ActionHandleLogin } from '../store/actions';\n\nconst Input = props => {\n  const name = props.name,\n        email = props.email,\n        HandleLogin = props.HandleLogin,\n        SubmitLogin = props.SubmitLogin;\n  const disabled = name !== '' && email !== '';\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: () => SubmitLogin(email),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Email do Gravatar:\"), React.createElement(\"input\", {\n    htmlFor: \"email\",\n    type: \"email\",\n    name: \"email\",\n    \"data-testid\": \"input-gravatar-email\",\n    value: email,\n    onChange: e => HandleLogin(e.target),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"player-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Nome do Jogador:\"), React.createElement(\"input\", {\n    htmlFor: \"player-name\",\n    type: \"text\",\n    name: \"name\",\n    \"data-testid\": \"input-player-name\",\n    value: name,\n    onChange: e => HandleLogin(e.target),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Jogar\",\n    \"data-testid\": \"btn-play\",\n    disabled: !disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })));\n};\n\nconst Login = props => {\n  const merda = false;\n  if (merda) return React.createElement(Game, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n  return Input(props);\n};\n\nconst mapStateToProps = ({\n  ReducerLogin: {\n    name,\n    email\n  }\n}) => ({\n  name,\n  email,\n  logged\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  HandleLogin: ActionHandleLogin,\n  SubmitLogin: ActionSubmitLogin\n}, dispatch);\n\nLogin.propTypes = {};\nLogin.defaultProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/Login.js"],"names":["React","Component","connect","bindActionCreators","PropTypes","Game","ActionSubmitLogin","ActionHandleLogin","Input","props","name","email","HandleLogin","SubmitLogin","disabled","e","target","Login","merda","mapStateToProps","ReducerLogin","logged","mapDispatchToProps","dispatch","propTypes","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,kBAArD;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA,QACfC,IADe,GAC2BD,KAD3B,CACfC,IADe;AAAA,QACTC,KADS,GAC2BF,KAD3B,CACTE,KADS;AAAA,QACFC,WADE,GAC2BH,KAD3B,CACFG,WADE;AAAA,QACWC,WADX,GAC2BJ,KAD3B,CACWI,WADX;AAEvB,QAAMC,QAAQ,GAAIJ,IAAI,KAAK,EAAT,IAAeC,KAAK,KAAK,EAA3C;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAE,MAAME,WAAW,CAACF,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,IAAA,IAAI,EAAC,OAA5B;AAAoC,IAAA,IAAI,EAAC,OAAzC;AAAiD,mBAAY,sBAA7D;AAAoF,IAAA,KAAK,EAAEA,KAA3F;AAAkG,IAAA,QAAQ,EAAGI,CAAD,IAAOH,WAAW,CAACG,CAAC,CAACC,MAAH,CAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,EAIE;AAAO,IAAA,OAAO,EAAC,aAAf;AAA6B,IAAA,IAAI,EAAC,MAAlC;AAAyC,IAAA,IAAI,EAAC,MAA9C;AAAqD,mBAAY,mBAAjE;AAAqF,IAAA,KAAK,EAAEN,IAA5F;AAAkG,IAAA,QAAQ,EAAGK,CAAD,IAAOH,WAAW,CAACG,CAAC,CAACC,MAAH,CAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,OAA3B;AAAmC,mBAAY,UAA/C;AAA0D,IAAA,QAAQ,EAAE,CAACF,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF;AAWD,CAdD;;AAgBA,MAAMG,KAAK,GAAIR,KAAD,IAAW;AACvB,QAAMS,KAAK,GAAG,KAAd;AACA,MAAIA,KAAJ,EAAW,OAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACX,SAAOV,KAAK,CAACC,KAAD,CAAZ;AACD,CAJD;;AAOA,MAAMU,eAAe,GAAG,CAAC;AAAEC,EAAAA,YAAY,EAAE;AAAEV,IAAAA,IAAF;AAAQC,IAAAA;AAAR;AAAhB,CAAD,MAAwC;AAAED,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeU,EAAAA;AAAf,CAAxC,CAAxB;;AAGA,MAAMC,kBAAkB,GAAIC,QAAD,IAAcpB,kBAAkB,CACzD;AACES,EAAAA,WAAW,EAAEL,iBADf;AAEEM,EAAAA,WAAW,EAAEP;AAFf,CADyD,EAItDiB,QAJsD,CAA3D;;AAOAN,KAAK,CAACO,SAAN,GAAkB,EAAlB;AAGAP,KAAK,CAACQ,YAAN,GAAqB,EAArB;AAGA,eAAevB,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CL,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Game from './Game';\nimport { ActionSubmitLogin, ActionHandleLogin } from '../store/actions';\n\nconst Input = (props) => {\n  const { name, email, HandleLogin, SubmitLogin } = props;\n  const disabled = (name !== '' && email !== '')\n  return (\n    <div>\n      <form onSubmit={() => SubmitLogin(email)}>\n        <label for=\"email\">Email do Gravatar:</label>\n        <input htmlFor=\"email\" type=\"email\" name=\"email\" data-testid=\"input-gravatar-email\" value={email} onChange={(e) => HandleLogin(e.target)} />\n        <label for=\"player-name\">Nome do Jogador:</label>\n        <input htmlFor=\"player-name\" type=\"text\" name=\"name\" data-testid=\"input-player-name\" value={name} onChange={(e) => HandleLogin(e.target)} />\n        <input type=\"submit\" value=\"Jogar\" data-testid=\"btn-play\" disabled={!disabled} />\n      </form>\n    </div>\n  );\n}\n\nconst Login = (props) => {\n  const merda = false;\n  if (merda) return <Game />;\n  return Input(props);\n}\n\n\nconst mapStateToProps = ({ ReducerLogin: { name, email } }) => ({ name, email, logged });\n\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    HandleLogin: ActionHandleLogin,\n    SubmitLogin: ActionSubmitLogin,\n  }, dispatch,\n);\n\nLogin.propTypes = {\n};\n\nLogin.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}