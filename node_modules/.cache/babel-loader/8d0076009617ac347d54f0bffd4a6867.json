{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/LoginPage/index.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { ActionSubmitLogin, ActionHandleLogin, ActionGetToken } from '../../store/actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async startGame() {\n    const _this$props = this.props,\n          SubmitLogin = _this$props.SubmitLogin,\n          GetToken = _this$props.GetToken,\n          email = _this$props.email;\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      await GetToken();\n    }\n\n    SubmitLogin(email);\n  }\n\n  renderInputEmail() {\n    const _this$props2 = this.props,\n          email = _this$props2.email,\n          HandleLogin = _this$props2.HandleLogin;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Email do Gravatar:\"), React.createElement(\"input\", {\n      htmlFor: \"email\",\n      name: \"email\",\n      value: email,\n      type: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: e => HandleLogin(e.target),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n  renderInputName() {\n    const _this$props3 = this.props,\n          name = _this$props3.name,\n          HandleLogin = _this$props3.HandleLogin;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"player-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Nome do Jogador:\"), React.createElement(\"input\", {\n      htmlFor: \"player-name\",\n      name: \"name\",\n      value: name,\n      type: \"text\",\n      \"data-testid\": \"input-player-name\",\n      onChange: e => HandleLogin(e.target),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n  renderSubmitButton() {\n    const _this$props4 = this.props,\n          email = _this$props4.email,\n          name = _this$props4.name;\n    const disabled = name !== '' && email !== '';\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      value: \"Jogar\",\n      \"data-testid\": \"btn-play\",\n      disabled: !disabled,\n      onClick: () => this.startGame(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Jogar\"));\n  }\n\n  renderInput() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.renderInputEmail(), this.renderInputName(), this.renderSubmitButton());\n  }\n\n  render() {\n    const logged = this.props.logged;\n    if (logged) return React.createElement(Redirect, {\n      to: \"/game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    });\n    return this.renderInput();\n  }\n\n}\n\nconst mapStateToProps = ({\n  ReducerLogin: {\n    name,\n    email,\n    logged,\n    hash\n  }\n}) => ({\n  name,\n  email,\n  logged,\n  hash\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  HandleLogin: ActionHandleLogin,\n  SubmitLogin: ActionSubmitLogin,\n  GetToken: ActionGetToken\n}, dispatch);\n\nLogin.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  logged: PropTypes.bool.isRequired,\n  HandleLogin: PropTypes.func.isRequired,\n  SubmitLogin: PropTypes.func.isRequired,\n  GetToken: PropTypes.func.isRequired\n};\nLogin.defaultProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/LoginPage/index.js"],"names":["React","Redirect","connect","bindActionCreators","PropTypes","ActionSubmitLogin","ActionHandleLogin","ActionGetToken","Login","Component","constructor","props","state","startGame","SubmitLogin","GetToken","email","token","localStorage","getItem","renderInputEmail","HandleLogin","e","target","renderInputName","name","renderSubmitButton","disabled","renderInput","render","logged","mapStateToProps","ReducerLogin","hash","mapDispatchToProps","dispatch","propTypes","string","isRequired","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { ActionSubmitLogin, ActionHandleLogin, ActionGetToken } from '../../store/actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async startGame() {\n    const { SubmitLogin, GetToken, email } = this.props;\n    const token = localStorage.getItem('token');\n    if (!token) {\n      await GetToken();\n    }\n    SubmitLogin(email);\n  }\n\n  renderInputEmail() {\n    const { email, HandleLogin } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"email\">Email do Gravatar:</label>\n        <input\n          htmlFor=\"email\"\n          name=\"email\"\n          value={email}\n          type=\"email\"\n          data-testid=\"input-gravatar-email\"\n          onChange={(e) => HandleLogin(e.target)}\n        />\n      </div>\n    );\n  }\n\n  renderInputName() {\n    const { name, HandleLogin } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"player-name\">Nome do Jogador:</label>\n        <input\n          htmlFor=\"player-name\"\n          name=\"name\"\n          value={name}\n          type=\"text\"\n          data-testid=\"input-player-name\"\n          onChange={(e) => HandleLogin(e.target)}\n        />\n      </div>\n    );\n  }\n\n  renderSubmitButton() {\n    const { email, name } = this.props;\n    const disabled = (name !== '' && email !== '');\n    return (\n      <div>\n        <button\n          type=\"button\"\n          value=\"Jogar\"\n          data-testid=\"btn-play\"\n          disabled={!disabled}\n          onClick={() => this.startGame()}\n        >\n          Jogar\n        </button>\n      </div>\n    );\n  }\n\n  renderInput() {\n    return (\n      <div>\n        {this.renderInputEmail()}\n        {this.renderInputName()}\n        {this.renderSubmitButton()}\n      </div>\n    );\n  }\n\n  render() {\n    const { logged } = this.props;\n    if (logged) return <Redirect to=\"/game\" />;\n    return this.renderInput();\n  }\n}\n\n\nconst mapStateToProps = ({\n  ReducerLogin: {\n    name, email, logged, hash,\n  },\n}) => ({\n  name, email, logged, hash,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    HandleLogin: ActionHandleLogin,\n    SubmitLogin: ActionSubmitLogin,\n    GetToken: ActionGetToken,\n  }, dispatch,\n);\n\nLogin.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  logged: PropTypes.bool.isRequired,\n  HandleLogin: PropTypes.func.isRequired,\n  SubmitLogin: PropTypes.func.isRequired,\n  GetToken: PropTypes.func.isRequired,\n};\n\nLogin.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}