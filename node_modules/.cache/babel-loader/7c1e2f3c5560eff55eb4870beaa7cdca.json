{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/LoginPage/index.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport 'bulma/css/bulma.css';\nimport SettingsButton from '../../components/SettingsButton';\nimport { ActionSubmitLogin, ActionHandleLogin, ActionGetToken, ActionSavePlayer } from '../../store/actions';\nimport GET_GRAVATAR_API from '../../services/GET_GRAVATAR_API';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async startGame() {\n    const {\n      SubmitLogin,\n      GetToken,\n      email,\n      name,\n      SavePlayer\n    } = this.props;\n    localStorage.removeItem('token');\n    const token = localStorage.getItem('token');\n    const gravatarEmail = GET_GRAVATAR_API(email);\n    SavePlayer(name, gravatarEmail);\n\n    if (!token) {\n      await GetToken();\n    }\n\n    localStorage.removeItem('state');\n    localStorage.setItem('state', JSON.stringify({\n      player: {\n        name,\n        gravatarEmail,\n        assertions: 0,\n        score: 0\n      }\n    }));\n    SubmitLogin();\n  }\n\n  renderInputEmail() {\n    const {\n      email,\n      HandleLogin\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Email do Gravatar:\"), /*#__PURE__*/React.createElement(\"input\", {\n      htmlFor: \"email\",\n      name: \"email\",\n      value: email,\n      type: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: e => HandleLogin(e.target),\n      className: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderInputName() {\n    const {\n      name,\n      HandleLogin\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"player-name\",\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Nome do Jogador:\"), /*#__PURE__*/React.createElement(\"input\", {\n      htmlFor: \"player-name\",\n      name: \"name\",\n      value: name,\n      type: \"text\",\n      \"data-testid\": \"input-player-name\",\n      onChange: e => HandleLogin(e.target),\n      className: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderSubmitButton() {\n    const {\n      email,\n      name\n    } = this.props;\n    const disabled = name !== '' && email !== '';\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      value: \"Jogar\",\n      \"data-testid\": \"btn-play\",\n      disabled: !disabled,\n      onClick: () => this.startGame(),\n      className: \"button is-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, \"Jogar\");\n  }\n\n  renderInput() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        width: '400px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SettingsButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, this.renderInputEmail(), this.renderInputName()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, this.renderSubmitButton())));\n  }\n\n  render() {\n    const {\n      logged\n    } = this.props;\n    if (logged) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 24\n      }\n    });\n    return this.renderInput();\n  }\n\n}\n\nconst mapStateToProps = ({\n  ReducerLogin: {\n    name,\n    email,\n    logged\n  }\n}) => ({\n  name,\n  email,\n  logged\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  HandleLogin: ActionHandleLogin,\n  SubmitLogin: ActionSubmitLogin,\n  GetToken: ActionGetToken,\n  SavePlayer: ActionSavePlayer\n}, dispatch);\n\nLogin.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  logged: PropTypes.bool.isRequired,\n  HandleLogin: PropTypes.func.isRequired,\n  SubmitLogin: PropTypes.func.isRequired,\n  GetToken: PropTypes.func.isRequired,\n  SavePlayer: PropTypes.func.isRequired\n};\nLogin.defaultProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/pages/LoginPage/index.js"],"names":["React","Redirect","connect","bindActionCreators","PropTypes","SettingsButton","ActionSubmitLogin","ActionHandleLogin","ActionGetToken","ActionSavePlayer","GET_GRAVATAR_API","Login","Component","constructor","props","state","startGame","SubmitLogin","GetToken","email","name","SavePlayer","localStorage","removeItem","token","getItem","gravatarEmail","setItem","JSON","stringify","player","assertions","score","renderInputEmail","HandleLogin","e","target","renderInputName","renderSubmitButton","disabled","renderInput","display","justifyContent","width","render","logged","mapStateToProps","ReducerLogin","mapDispatchToProps","dispatch","propTypes","string","isRequired","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport 'bulma/css/bulma.css';\nimport SettingsButton from '../../components/SettingsButton';\nimport {\n  ActionSubmitLogin, ActionHandleLogin, ActionGetToken, ActionSavePlayer,\n} from '../../store/actions';\nimport GET_GRAVATAR_API from '../../services/GET_GRAVATAR_API';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async startGame() {\n    const {\n      SubmitLogin, GetToken, email, name, SavePlayer,\n    } = this.props;\n    localStorage.removeItem('token');\n    const token = localStorage.getItem('token');\n    const gravatarEmail = GET_GRAVATAR_API(email);\n    SavePlayer(name, gravatarEmail);\n    if (!token) {\n      await GetToken();\n    }\n    localStorage.removeItem('state');\n    localStorage.setItem('state', JSON.stringify({\n      player: {\n        name, gravatarEmail, assertions: 0, score: 0,\n      },\n    }));\n    SubmitLogin();\n  }\n\n  renderInputEmail() {\n    const { email, HandleLogin } = this.props;\n    return (\n      <div className=\"field\">\n        <label htmlFor=\"email\" className=\"label\">Email do Gravatar:</label>\n        <input\n          htmlFor=\"email\"\n          name=\"email\"\n          value={email}\n          type=\"email\"\n          data-testid=\"input-gravatar-email\"\n          onChange={(e) => HandleLogin(e.target)}\n          className=\"input\"\n        />\n      </div>\n    );\n  }\n\n  renderInputName() {\n    const { name, HandleLogin } = this.props;\n    return (\n      <div className=\"field\">\n        <label htmlFor=\"player-name\" className=\"label\">Nome do Jogador:</label>\n        <input\n          htmlFor=\"player-name\"\n          name=\"name\"\n          value={name}\n          type=\"text\"\n          data-testid=\"input-player-name\"\n          onChange={(e) => HandleLogin(e.target)}\n          className=\"input\"\n        />\n      </div>\n    );\n  }\n\n  renderSubmitButton() {\n    const { email, name } = this.props;\n    const disabled = (name !== '' && email !== '');\n    return (\n      <button\n        type=\"button\"\n        value=\"Jogar\"\n        data-testid=\"btn-play\"\n        disabled={!disabled}\n        onClick={() => this.startGame()}\n        className=\"button is-success\"\n      >\n        Jogar\n      </button>\n\n    );\n  }\n\n  renderInput() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <div\n          className=\"card\"\n          style={{\n            width: '400px',\n          }}\n        >\n          <div className=\"card-header\">\n            <SettingsButton />\n          </div>\n          <div className=\"card-content\">\n            {this.renderInputEmail()}\n            {this.renderInputName()}\n          </div>\n          <div className=\"card-content\">\n            {this.renderSubmitButton()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { logged } = this.props;\n    if (logged) return <Redirect to=\"/game\" />;\n\n    return this.renderInput();\n  }\n}\n\n\nconst mapStateToProps = ({\n  ReducerLogin: {\n    name, email, logged,\n  },\n}) => ({\n  name, email, logged,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    HandleLogin: ActionHandleLogin,\n    SubmitLogin: ActionSubmitLogin,\n    GetToken: ActionGetToken,\n    SavePlayer: ActionSavePlayer,\n  }, dispatch,\n);\n\nLogin.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  logged: PropTypes.bool.isRequired,\n  HandleLogin: PropTypes.func.isRequired,\n  SubmitLogin: PropTypes.func.isRequired,\n  GetToken: PropTypes.func.isRequired,\n  SavePlayer: PropTypes.func.isRequired,\n};\n\nLogin.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}