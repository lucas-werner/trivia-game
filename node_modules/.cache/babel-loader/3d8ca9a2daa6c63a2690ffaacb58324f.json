{"ast":null,"code":"import _regeneratorRuntime from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{bindActionCreators}from'redux';import{connect}from'react-redux';import'../pages/GamePage/GamePage.css';import{ActionStopTimer}from'../store/actions/ActionsTimer';import{ActionSumPoints}from'../store/actions';var GameContent=/*#__PURE__*/function(_Component){_inherits(GameContent,_Component);var _super=_createSuper(GameContent);function GameContent(){_classCallCheck(this,GameContent);return _super.apply(this,arguments);}_createClass(GameContent,[{key:\"highlightCorrectAnswer\",value:function highlightCorrectAnswer(){console.log(this.props);var wrongAnswers=document.getElementsByClassName('wrong-answer');var wrongAnswersArr=_toConsumableArray(wrongAnswers);var correctAnswer=document.getElementsByClassName('correct-answer')[0];wrongAnswersArr.map(function(answer){return answer.classList.add('wrong');});correctAnswer.classList.add('correct');}},{key:\"difficultyMeasurement\",value:function difficultyMeasurement(difficulty){console.log(this.props);switch(difficulty){case'easy':{return 1;}case'medium':{return 2;}case'hard':{return 3;}default:return 0;}}},{key:\"saveScore\",value:function saveScore(){var _this$props=this.props,name=_this$props.name,gravatarEmail=_this$props.gravatarEmail,assertions=_this$props.assertions,score=_this$props.score;var obj={player:{name:name,gravatarEmail:gravatarEmail,assertions:assertions,score:score}};localStorage.removeItem('state');localStorage.setItem('state',JSON.stringify(obj));}},{key:\"handleAnswer\",value:function handleAnswer(event){this.highlightCorrectAnswer();var answerClassList=event.target.classList;var answer=_toConsumableArray(answerClassList);if(answer.includes('correct-answer')){this.calculatePoints();}}},{key:\"calculatePoints\",value:function(){var _calculatePoints=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this$props2,questions,questionNumber,timer,sumPoints,difficulty,difficultyValue,points;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this$props2=this.props,questions=_this$props2.questions,questionNumber=_this$props2.questionNumber,timer=_this$props2.timer,sumPoints=_this$props2.sumPoints;difficulty=questions[questionNumber].difficulty;difficultyValue=this.difficultyMeasurement(difficulty);points=10+timer*difficultyValue;_context.next=6;return sumPoints(points);case 6:this.saveScore();case 7:case\"end\":return _context.stop();}}},_callee,this);}));function calculatePoints(){return _calculatePoints.apply(this,arguments);}return calculatePoints;}()},{key:\"generateOptions\",value:function generateOptions(){var _this$props3=this.props,questions=_this$props3.questions,questionNumber=_this$props3.questionNumber;var _questions$questionNu=questions[questionNumber],correctAnswer=_questions$questionNu.correct_answer,incorrectAnswers=_questions$questionNu.incorrect_answers;var options=[{answer:correctAnswer,isCorrect:true}];incorrectAnswers.map(function(answer){return options.push({answer:answer,isCorrect:false});});return options.sort(GameContent.compareAnswers);}},{key:\"renderQuestions\",value:function renderQuestions(){var _this$props4=this.props,questions=_this$props4.questions,questionNumber=_this$props4.questionNumber;var _questions$questionNu2=questions[questionNumber],category=_questions$questionNu2.category,question=_questions$questionNu2.question;return/*#__PURE__*/React.createElement(\"div\",{className:\"game-content-question\"},/*#__PURE__*/React.createElement(\"div\",{\"data-testid\":\"question-category\",className:\"game-content-category\"},decodeURIComponent(category)),/*#__PURE__*/React.createElement(\"div\",{\"data-testid\":\"question-text\"},/*#__PURE__*/React.createElement(\"p\",null,decodeURIComponent(question))));}},{key:\"renderOptions\",value:function renderOptions(){var _this=this;var _this$props5=this.props,timer=_this$props5.timer,stopTimer=_this$props5.stopTimer,toStopTimer=_this$props5.toStopTimer;return/*#__PURE__*/React.createElement(\"div\",{className:\"game-content-answers\"},this.generateOptions().map(function(object,i){return/*#__PURE__*/React.createElement(\"button\",{\"data-testid\":object.isCorrect?'correct-answer':\"wrong-answer-\".concat(i),type:\"button\",className:\"button is-fullwidth \\n                \".concat(object.isCorrect?'correct-answer':'wrong-answer'),onClick:function onClick(event){_this.handleAnswer(event);toStopTimer();},disabled:timer===0||stopTimer},decodeURIComponent(object.answer));}));}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"game-content\"},this.renderQuestions(),this.renderOptions());}}],[{key:\"compareAnswers\",value:function compareAnswers(a,b){var ans1=a.answer.toUpperCase();var ans2=b.answer.toUpperCase();var comparison=0;if(ans1>ans2){comparison=1;}else if(ans1<ans2){comparison=-1;}return comparison;}}]);return GameContent;}(Component);var mapStateToProps=function mapStateToProps(_ref){var _ref$ReducerQuestions=_ref.ReducerQuestions,questions=_ref$ReducerQuestions.questions,questionNumber=_ref$ReducerQuestions.questionNumber,_ref$ReducerTimer=_ref.ReducerTimer,timer=_ref$ReducerTimer.timer,stopTimer=_ref$ReducerTimer.stopTimer,_ref$ReducerPlayer=_ref.ReducerPlayer,name=_ref$ReducerPlayer.name,gravatarEmail=_ref$ReducerPlayer.gravatarEmail,assertions=_ref$ReducerPlayer.assertions,score=_ref$ReducerPlayer.score;return{questionNumber:questionNumber,questions:questions,timer:timer,stopTimer:stopTimer,name:name,gravatarEmail:gravatarEmail,assertions:assertions,score:score};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return bindActionCreators({toStopTimer:ActionStopTimer,sumPoints:ActionSumPoints},dispatch);};GameContent.defaultProps={};export default connect(mapStateToProps,mapDispatchToProps)(GameContent);","map":{"version":3,"sources":["/home/lucaswerner/repositories/github-personal/trivia-game/src/components/GameContent.js"],"names":["React","Component","bindActionCreators","connect","ActionStopTimer","ActionSumPoints","GameContent","console","log","props","wrongAnswers","document","getElementsByClassName","wrongAnswersArr","correctAnswer","map","answer","classList","add","difficulty","name","gravatarEmail","assertions","score","obj","player","localStorage","removeItem","setItem","JSON","stringify","event","highlightCorrectAnswer","answerClassList","target","includes","calculatePoints","questions","questionNumber","timer","sumPoints","difficultyValue","difficultyMeasurement","points","saveScore","correct_answer","incorrectAnswers","incorrect_answers","options","isCorrect","push","sort","compareAnswers","category","question","decodeURIComponent","stopTimer","toStopTimer","generateOptions","object","i","handleAnswer","renderQuestions","renderOptions","a","b","ans1","toUpperCase","ans2","comparison","mapStateToProps","ReducerQuestions","ReducerTimer","ReducerPlayer","mapDispatchToProps","dispatch","defaultProps"],"mappings":"4sCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,kBAAT,KAAmC,OAAnC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAO,gCAAP,CACA,OAASC,eAAT,KAAgC,+BAAhC,CACA,OAASC,eAAT,KAAgC,kBAAhC,C,GAEMC,CAAAA,W,uSAaqB,CACvBC,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,EACA,GAAMC,CAAAA,YAAY,CAAGC,QAAQ,CAACC,sBAAT,CAAgC,cAAhC,CAArB,CACA,GAAMC,CAAAA,eAAe,oBAAOH,YAAP,CAArB,CACA,GAAMI,CAAAA,aAAa,CAAGH,QAAQ,CAACC,sBAAT,CAAgC,gBAAhC,EAAkD,CAAlD,CAAtB,CACAC,eAAe,CAACE,GAAhB,CAAoB,SAACC,MAAD,QAAYA,CAAAA,MAAM,CAACC,SAAP,CAAiBC,GAAjB,CAAqB,OAArB,CAAZ,EAApB,EACAJ,aAAa,CAACG,SAAd,CAAwBC,GAAxB,CAA4B,SAA5B,EACD,C,oEAEqBC,U,CAAY,CAChCZ,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,EACA,OAAQU,UAAR,EACE,IAAK,MAAL,CAAa,CACX,MAAO,EAAP,CACD,CACD,IAAK,QAAL,CAAe,CACb,MAAO,EAAP,CACD,CACD,IAAK,MAAL,CAAa,CACX,MAAO,EAAP,CACD,CACD,QAAS,MAAO,EAAP,CAVX,CAYD,C,6CAEW,iBAKN,KAAKV,KALC,CAERW,IAFQ,aAERA,IAFQ,CAGRC,aAHQ,aAGRA,aAHQ,CAIRC,UAJQ,aAIRA,UAJQ,CAIIC,KAJJ,aAIIA,KAJJ,CAMV,GAAMC,CAAAA,GAAG,CAAG,CACVC,MAAM,CAAE,CACNL,IAAI,CAAJA,IADM,CACAC,aAAa,CAAbA,aADA,CACeC,UAAU,CAAVA,UADf,CAC2BC,KAAK,CAALA,KAD3B,CADE,CAAZ,CAKAG,YAAY,CAACC,UAAb,CAAwB,OAAxB,EACAD,YAAY,CAACE,OAAb,CAAqB,OAArB,CAA8BC,IAAI,CAACC,SAAL,CAAeN,GAAf,CAA9B,EACD,C,kDAEYO,K,CAAO,CAClB,KAAKC,sBAAL,GACA,GAAMC,CAAAA,eAAe,CAAGF,KAAK,CAACG,MAAN,CAAajB,SAArC,CACA,GAAMD,CAAAA,MAAM,oBAAOiB,eAAP,CAAZ,CACA,GAAIjB,MAAM,CAACmB,QAAP,CAAgB,gBAAhB,CAAJ,CAAuC,CACrC,KAAKC,eAAL,GACD,CACF,C,mWAOK,KAAK3B,K,CAHP4B,S,cAAAA,S,CACAC,c,cAAAA,c,CACAC,K,cAAAA,K,CAAOC,S,cAAAA,S,CAEDrB,U,CAAekB,SAAS,CAACC,cAAD,C,CAAxBnB,U,CACFsB,e,CAAkB,KAAKC,qBAAL,CAA2BvB,UAA3B,C,CAClBwB,M,CAAS,GAAMJ,KAAK,CAAGE,e,uBACvBD,CAAAA,SAAS,CAACG,MAAD,C,QACf,KAAKC,SAAL,G,2NAGgB,kBACsB,KAAKnC,KAD3B,CACR4B,SADQ,cACRA,SADQ,CACGC,cADH,cACGA,cADH,2BAKZD,SAAS,CAACC,cAAD,CALG,CAGExB,aAHF,uBAGd+B,cAHc,CAIKC,gBAJL,uBAIdC,iBAJc,CAMhB,GAAMC,CAAAA,OAAO,CAAG,CAAC,CACfhC,MAAM,CAAEF,aADO,CAEfmC,SAAS,CAAE,IAFI,CAAD,CAAhB,CAIAH,gBAAgB,CAAC/B,GAAjB,CAAqB,SAACC,MAAD,QAAYgC,CAAAA,OAAO,CAACE,IAAR,CAAa,CAC5ClC,MAAM,CAANA,MAD4C,CAE5CiC,SAAS,CAAE,KAFiC,CAAb,CAAZ,EAArB,EAIA,MAAOD,CAAAA,OAAO,CAACG,IAAR,CAAa7C,WAAW,CAAC8C,cAAzB,CAAP,CACD,C,yDAEiB,kBACsB,KAAK3C,KAD3B,CACR4B,SADQ,cACRA,SADQ,CACGC,cADH,cACGA,cADH,4BAEeD,SAAS,CAACC,cAAD,CAFxB,CAERe,QAFQ,wBAERA,QAFQ,CAEEC,QAFF,wBAEEA,QAFF,CAGhB,mBACE,2BAAK,SAAS,CAAC,uBAAf,eACE,2BAAK,cAAY,mBAAjB,CAAqC,SAAS,CAAC,uBAA/C,EACGC,kBAAkB,CAACF,QAAD,CADrB,CADF,cAIE,2BAAK,cAAY,eAAjB,eACE,6BAAIE,kBAAkB,CAACD,QAAD,CAAtB,CADF,CAJF,CADF,CAUD,C,qDAEe,iCAC4B,KAAK7C,KADjC,CACN8B,KADM,cACNA,KADM,CACCiB,SADD,cACCA,SADD,CACYC,WADZ,cACYA,WADZ,CAEd,mBACE,2BAAK,SAAS,CAAC,sBAAf,EACG,KAAKC,eAAL,GAAuB3C,GAAvB,CACC,SAAC4C,MAAD,CAASC,CAAT,qBACE,8BACE,cAAaD,MAAM,CAACV,SAAP,CAAmB,gBAAnB,wBAAsDW,CAAtD,CADf,CAEE,IAAI,CAAC,QAFP,CAGE,SAAS,iDACLD,MAAM,CAACV,SAAP,CAAmB,gBAAnB,CAAsC,cADjC,CAHX,CAKE,OAAO,CAAE,iBAAClB,KAAD,CAAW,CAClB,KAAI,CAAC8B,YAAL,CAAkB9B,KAAlB,EACA0B,WAAW,GACZ,CARH,CASE,QAAQ,CAAGlB,KAAK,GAAK,CAAV,EAAeiB,SAT5B,EAWGD,kBAAkB,CAACI,MAAM,CAAC3C,MAAR,CAXrB,CADF,EADD,CADH,CADF,CAqBD,C,uCAEQ,CACP,mBACE,2BAAK,SAAS,CAAC,cAAf,EACG,KAAK8C,eAAL,EADH,CAEG,KAAKC,aAAL,EAFH,CADF,CAMD,C,wDA1IqBC,C,CAAGC,C,CAAG,CAC1B,GAAMC,CAAAA,IAAI,CAAGF,CAAC,CAAChD,MAAF,CAASmD,WAAT,EAAb,CACA,GAAMC,CAAAA,IAAI,CAAGH,CAAC,CAACjD,MAAF,CAASmD,WAAT,EAAb,CACA,GAAIE,CAAAA,UAAU,CAAG,CAAjB,CACA,GAAIH,IAAI,CAAGE,IAAX,CAAiB,CACfC,UAAU,CAAG,CAAb,CACD,CAFD,IAEO,IAAIH,IAAI,CAAGE,IAAX,CAAiB,CACtBC,UAAU,CAAG,CAAC,CAAd,CACD,CACD,MAAOA,CAAAA,UAAP,CACD,C,yBAXuBpE,S,EA8I1B,GAAMqE,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,sCAEpBC,gBAFoB,CAEAlC,SAFA,uBAEAA,SAFA,CAEWC,cAFX,uBAEWA,cAFX,wBAGpBkC,YAHoB,CAGJjC,KAHI,mBAGJA,KAHI,CAGGiB,SAHH,mBAGGA,SAHH,yBAIpBiB,aAJoB,CAKlBrD,IALkB,oBAKlBA,IALkB,CAMlBC,aANkB,oBAMlBA,aANkB,CAOlBC,UAPkB,oBAOlBA,UAPkB,CAQlBC,KARkB,oBAQlBA,KARkB,OAWlB,CACJe,cAAc,CAAdA,cADI,CAEJD,SAAS,CAATA,SAFI,CAGJE,KAAK,CAALA,KAHI,CAIJiB,SAAS,CAATA,SAJI,CAKJpC,IAAI,CAAJA,IALI,CAMJC,aAAa,CAAbA,aANI,CAOJC,UAAU,CAAVA,UAPI,CAQJC,KAAK,CAALA,KARI,CAXkB,EAAxB,CAsBA,GAAMmD,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAczE,CAAAA,kBAAkB,CACzD,CACEuD,WAAW,CAAErD,eADf,CAEEoC,SAAS,CAAEnC,eAFb,CADyD,CAItDsE,QAJsD,CAAhC,EAA3B,CAoBArE,WAAW,CAACsE,YAAZ,CAA2B,EAA3B,CAGA,cAAezE,CAAAA,OAAO,CAACmE,eAAD,CAAkBI,kBAAlB,CAAP,CAA6CpE,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../pages/GamePage/GamePage.css';\nimport { ActionStopTimer } from '../store/actions/ActionsTimer';\nimport { ActionSumPoints } from '../store/actions';\n\nclass GameContent extends Component {\n  static compareAnswers(a, b) {\n    const ans1 = a.answer.toUpperCase();\n    const ans2 = b.answer.toUpperCase();\n    let comparison = 0;\n    if (ans1 > ans2) {\n      comparison = 1;\n    } else if (ans1 < ans2) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n  highlightCorrectAnswer() {\n    console.log(this.props);\n    const wrongAnswers = document.getElementsByClassName('wrong-answer');\n    const wrongAnswersArr = [...wrongAnswers];\n    const correctAnswer = document.getElementsByClassName('correct-answer')[0];\n    wrongAnswersArr.map((answer) => answer.classList.add('wrong'));\n    correctAnswer.classList.add('correct');\n  }\n\n  difficultyMeasurement(difficulty) {\n    console.log(this.props);\n    switch (difficulty) {\n      case 'easy': {\n        return 1;\n      }\n      case 'medium': {\n        return 2;\n      }\n      case 'hard': {\n        return 3;\n      }\n      default: return 0;\n    }\n  }\n\n  saveScore() {\n    const {\n      name,\n      gravatarEmail,\n      assertions, score,\n    } = this.props;\n    const obj = {\n      player: {\n        name, gravatarEmail, assertions, score,\n      },\n    };\n    localStorage.removeItem('state');\n    localStorage.setItem('state', JSON.stringify(obj));\n  }\n\n  handleAnswer(event) {\n    this.highlightCorrectAnswer();\n    const answerClassList = event.target.classList;\n    const answer = [...answerClassList];\n    if (answer.includes('correct-answer')) {\n      this.calculatePoints();\n    }\n  }\n\n  async calculatePoints() {\n    const {\n      questions,\n      questionNumber,\n      timer, sumPoints,\n    } = this.props;\n    const { difficulty } = questions[questionNumber];\n    const difficultyValue = this.difficultyMeasurement(difficulty);\n    const points = 10 + (timer * difficultyValue);\n    await sumPoints(points);\n    this.saveScore();\n  }\n\n  generateOptions() {\n    const { questions, questionNumber } = this.props;\n    const {\n      correct_answer: correctAnswer,\n      incorrect_answers: incorrectAnswers,\n    } = questions[questionNumber];\n    const options = [{\n      answer: correctAnswer,\n      isCorrect: true,\n    }];\n    incorrectAnswers.map((answer) => options.push({\n      answer,\n      isCorrect: false,\n    }));\n    return options.sort(GameContent.compareAnswers);\n  }\n\n  renderQuestions() {\n    const { questions, questionNumber } = this.props;\n    const { category, question } = questions[questionNumber];\n    return (\n      <div className=\"game-content-question\">\n        <div data-testid=\"question-category\" className=\"game-content-category\">\n          {decodeURIComponent(category)}\n        </div>\n        <div data-testid=\"question-text\">\n          <p>{decodeURIComponent(question)}</p>\n        </div>\n      </div>\n    );\n  }\n\n  renderOptions() {\n    const { timer, stopTimer, toStopTimer } = this.props;\n    return (\n      <div className=\"game-content-answers\">\n        {this.generateOptions().map(\n          (object, i) => (\n            <button\n              data-testid={object.isCorrect ? 'correct-answer' : `wrong-answer-${i}`}\n              type=\"button\"\n              className={`button is-fullwidth \n                ${object.isCorrect ? 'correct-answer' : 'wrong-answer'}`}\n              onClick={(event) => {\n                this.handleAnswer(event);\n                toStopTimer();\n              }}\n              disabled={(timer === 0 || stopTimer)}\n            >\n              {decodeURIComponent(object.answer)}\n            </button>\n          ),\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"game-content\">\n        {this.renderQuestions()}\n        {this.renderOptions()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (\n  {\n    ReducerQuestions: { questions, questionNumber },\n    ReducerTimer: { timer, stopTimer },\n    ReducerPlayer: {\n      name,\n      gravatarEmail,\n      assertions,\n      score,\n    },\n  },\n) => ({\n  questionNumber,\n  questions,\n  timer,\n  stopTimer,\n  name,\n  gravatarEmail,\n  assertions,\n  score,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    toStopTimer: ActionStopTimer,\n    sumPoints: ActionSumPoints,\n  }, dispatch,\n);\n\nGameContent.propTypes = {\n  questionNumber: PropTypes.number.isRequired,\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  timer: PropTypes.number.isRequired,\n  sumPoints: PropTypes.func.isRequired,\n  stopTimer: PropTypes.bool.isRequired,\n  toStopTimer: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  gravatarEmail: PropTypes.string.isRequired,\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nGameContent.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameContent);\n"]},"metadata":{},"sourceType":"module"}