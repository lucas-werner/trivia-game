{"ast":null,"code":"import * as types from '../actions/ActionTypes';\nconst initialState = {\n  loading: false,\n  questions: [],\n  questionNumber: 0,\n  error: ''\n};\n\nfunction ReducerQuestions(state = initialState, action) {\n  switch (action.type) {\n    case types.REQUEST_QUESTIONS:\n      return { ...state,\n        loading: true\n      };\n\n    case types.QUESTIONS_SUCCESS:\n      return { ...state,\n        loading: false,\n        questions: action.payload.questions\n      };\n\n    case types.QUESTIONS_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.payload.error\n      };\n\n    case types.CHANGE_QUESTION:\n      return { ...state,\n        questionNumber: state.questionNumber + 1\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default ReducerQuestions;","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/store/reducers/ReducerQuestions.js"],"names":["types","initialState","loading","questions","questionNumber","error","ReducerQuestions","state","action","type","REQUEST_QUESTIONS","QUESTIONS_SUCCESS","payload","QUESTIONS_ERROR","CHANGE_QUESTION"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,cAAc,EAAE,CAHG;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;;AAOA,SAASC,gBAAT,CAA0BC,KAAK,GAAGN,YAAlC,EAAgDO,MAAhD,EAAwD;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,KAAK,CAACU,iBAAX;AACE,aAAO,EACL,GAAGH,KADE;AAELL,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKF,KAAK,CAACW,iBAAX;AACE,aAAO,EACL,GAAGJ,KADE;AAELL,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,SAAS,EAAEK,MAAM,CAACI,OAAP,CAAeT;AAHrB,OAAP;;AAKF,SAAKH,KAAK,CAACa,eAAX;AACE,aAAO,EACL,GAAGN,KADE;AAELL,QAAAA,OAAO,EAAE,KAFJ;AAGLG,QAAAA,KAAK,EAAEG,MAAM,CAACI,OAAP,CAAeP;AAHjB,OAAP;;AAKF,SAAKL,KAAK,CAACc,eAAX;AACE,aAAO,EAAE,GAAGP,KAAL;AAAYH,QAAAA,cAAc,EAAEG,KAAK,CAACH,cAAN,GAAuB;AAAnD,OAAP;;AACF;AACE,aAAOG,KAAP;AArBJ;AAuBD;;AAED,eAAeD,gBAAf","sourcesContent":["import * as types from '../actions/ActionTypes';\n\nconst initialState = {\n  loading: false,\n  questions: [],\n  questionNumber: 0,\n  error: '',\n};\n\nfunction ReducerQuestions(state = initialState, action) {\n  switch (action.type) {\n    case types.REQUEST_QUESTIONS:\n      return {\n        ...state,\n        loading: true,\n      };\n    case types.QUESTIONS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        questions: action.payload.questions,\n      };\n    case types.QUESTIONS_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      };\n    case types.CHANGE_QUESTION:\n      return { ...state, questionNumber: state.questionNumber + 1 };\n    default:\n      return state;\n  }\n}\n\nexport default ReducerQuestions;\n"]},"metadata":{},"sourceType":"module"}