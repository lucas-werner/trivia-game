{"ast":null,"code":"import*as types from'./ActionTypes';import GET_QUESTIONS_API from'../../services/GET_QUESTIONS_API';var requestQuestions=function requestQuestions(){return{type:types.REQUEST_QUESTIONS};};var questionsSuccess=function questionsSuccess(questions){return{type:types.QUESTIONS_SUCCESS,payload:{questions:questions}};};var questionsError=function questionsError(error){return{type:types.QUESTIONS_ERROR,payload:{error:error}};};export default function ActionGetQuestions(token){return function(dispatch){dispatch(requestQuestions());return GET_QUESTIONS_API(token).then(function(data){return dispatch(questionsSuccess(data.results),console.log('teste',data));},function(error){return dispatch(questionsError(error.message));});};}","map":{"version":3,"sources":["/home/lucaswerner/repositories/github-personal/trivia-game/src/store/actions/ActionGetQuestions.js"],"names":["types","GET_QUESTIONS_API","requestQuestions","type","REQUEST_QUESTIONS","questionsSuccess","questions","QUESTIONS_SUCCESS","payload","questionsError","error","QUESTIONS_ERROR","ActionGetQuestions","token","dispatch","then","data","results","console","log","message"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,eAAvB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,kCAA9B,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAO,CAC9BC,IAAI,CAAEH,KAAK,CAACI,iBADkB,CAAP,EAAzB,CAKA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,SAAD,QAAgB,CACvCH,IAAI,CAAEH,KAAK,CAACO,iBAD2B,CAEvCC,OAAO,CAAE,CACPF,SAAS,CAATA,SADO,CAF8B,CAAhB,EAAzB,CAOA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,QAAY,CACjCP,IAAI,CAAEH,KAAK,CAACW,eADqB,CAEjCH,OAAO,CAAE,CACPE,KAAK,CAALA,KADO,CAFwB,CAAZ,EAAvB,CAOA,cAAe,SAASE,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmC,CAChD,MAAO,UAACC,QAAD,CAAc,CACnBA,QAAQ,CAACZ,gBAAgB,EAAjB,CAAR,CACA,MAAOD,CAAAA,iBAAiB,CAACY,KAAD,CAAjB,CACJE,IADI,CACC,SAACC,IAAD,QAAUF,CAAAA,QAAQ,CAACT,gBAAgB,CAACW,IAAI,CAACC,OAAN,CAAjB,CAAiCC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBH,IAArB,CAAjC,CAAlB,EADD,CAEH,SAACN,KAAD,QAAWI,CAAAA,QAAQ,CAACL,cAAc,CAACC,KAAK,CAACU,OAAP,CAAf,CAAnB,EAFG,CAAP,CAGD,CALD,CAMD","sourcesContent":["import * as types from './ActionTypes';\nimport GET_QUESTIONS_API from '../../services/GET_QUESTIONS_API';\n\nconst requestQuestions = () => ({\n  type: types.REQUEST_QUESTIONS,\n});\n\n\nconst questionsSuccess = (questions) => ({\n  type: types.QUESTIONS_SUCCESS,\n  payload: {\n    questions,\n  },\n});\n\nconst questionsError = (error) => ({\n  type: types.QUESTIONS_ERROR,\n  payload: {\n    error,\n  },\n});\n\nexport default function ActionGetQuestions(token) {\n  return (dispatch) => {\n    dispatch(requestQuestions());\n    return GET_QUESTIONS_API(token)\n      .then((data) => dispatch(questionsSuccess(data.results), console.log('teste', data)),\n        (error) => dispatch(questionsError(error.message)));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}