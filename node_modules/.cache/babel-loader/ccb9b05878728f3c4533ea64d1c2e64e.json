{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/components/GameFooter.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Timer from './Timer';\nimport { ActionResetTimer } from '../store/actions/ActionsTimer';\nimport { ActionNextQuestion } from '../store/actions';\n\nclass GameFooter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  nextQuestion() {\n    const {\n      ChangeQuestion\n    } = this.props;\n    ChangeQuestion();\n    this.removeCorrectAnswerHighlight();\n  }\n\n  removeCorrectAnswerHighlight() {\n    console.log(this.props);\n    const wrongAnswers = document.getElementsByClassName('wrong-answer');\n    const wrongAnswersArr = [...wrongAnswers];\n    const correctAnswer = document.getElementsByClassName('correct-answer')[0];\n    wrongAnswersArr.map(answer => answer.classList.remove('wrong'));\n    correctAnswer.classList.remove('correct');\n  }\n\n  saveScore() {\n    const {\n      name,\n      gravatarEmail,\n      assertions,\n      score\n    } = this.props;\n    const obj = {\n      player: {\n        name,\n        assertions,\n        score,\n        gravatarEmail\n      }\n    };\n    localStorage.setItem('state', JSON.stringify(obj));\n  }\n\n  renderButtonNextQuestion() {\n    const {\n      questionNumber,\n      ResetTimer\n    } = this.props;\n\n    if (questionNumber === 4) {\n      return /*#__PURE__*/React.createElement(Link, {\n        to: \"/ranking\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"button is-info card-footer-item\",\n        \"data-testid\": \"btn-next\",\n        onClick: () => this.saveScore(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, \"FINALIZAR\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"button is-info card-footer-item\",\n      onClick: () => {\n        this.nextQuestion();\n        ResetTimer();\n      },\n      \"data-testid\": \"btn-next\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, \"PR\\xD3XIMA\");\n  }\n\n  render() {\n    const {\n      stopTimer\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-footer-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Timer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, stopTimer && this.renderButtonNextQuestion()));\n  }\n\n}\n\nconst mapStateToProps = ({\n  ReducerTimer: {\n    timer,\n    stopTimer\n  },\n  ReducerQuestions: {\n    questionNumber\n  },\n  ReducerPlayer: {\n    name,\n    gravatarEmail,\n    assertions,\n    score\n  }\n}) => ({\n  timer,\n  questionNumber,\n  name,\n  gravatarEmail,\n  assertions,\n  score,\n  stopTimer\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  ResetTimer: ActionResetTimer,\n  ChangeQuestion: ActionNextQuestion\n}, dispatch);\n\nGameFooter.propTypes = {\n  ResetTimer: PropTypes.func.isRequired,\n  ChangeQuestion: PropTypes.func.isRequired,\n  questionNumber: PropTypes.number.isRequired,\n  stopTimer: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  gravatarEmail: PropTypes.string.isRequired,\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired\n};\nGameFooter.defaultProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(GameFooter);","map":{"version":3,"sources":["/home/lucaswerner/repositories/trybe-projects/sd-03-project-trivia-react-redux-02/src/components/GameFooter.js"],"names":["React","Component","connect","bindActionCreators","Link","PropTypes","Timer","ActionResetTimer","ActionNextQuestion","GameFooter","constructor","props","state","nextQuestion","ChangeQuestion","removeCorrectAnswerHighlight","console","log","wrongAnswers","document","getElementsByClassName","wrongAnswersArr","correctAnswer","map","answer","classList","remove","saveScore","name","gravatarEmail","assertions","score","obj","player","localStorage","setItem","JSON","stringify","renderButtonNextQuestion","questionNumber","ResetTimer","render","stopTimer","mapStateToProps","ReducerTimer","timer","ReducerQuestions","ReducerPlayer","mapDispatchToProps","dispatch","propTypes","func","isRequired","number","bool","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Timer from './Timer';\nimport { ActionResetTimer } from '../store/actions/ActionsTimer';\nimport { ActionNextQuestion } from '../store/actions';\n\n\nclass GameFooter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  nextQuestion() {\n    const { ChangeQuestion } = this.props;\n    ChangeQuestion();\n    this.removeCorrectAnswerHighlight();\n  }\n\n  removeCorrectAnswerHighlight() {\n    console.log(this.props);\n    const wrongAnswers = document.getElementsByClassName('wrong-answer');\n    const wrongAnswersArr = [...wrongAnswers];\n    const correctAnswer = document.getElementsByClassName('correct-answer')[0];\n    wrongAnswersArr.map((answer) => answer.classList.remove('wrong'));\n    correctAnswer.classList.remove('correct');\n  }\n\n  saveScore() {\n    const {\n      name,\n      gravatarEmail,\n      assertions,\n      score,\n    } = this.props;\n    const obj = {\n      player: {\n        name, assertions, score, gravatarEmail,\n      },\n    };\n    localStorage.setItem('state', JSON.stringify(obj));\n  }\n\n  renderButtonNextQuestion() {\n    const { questionNumber, ResetTimer } = this.props;\n    if (questionNumber === 4) {\n      return (\n        <Link to=\"/ranking\">\n          <button\n            type=\"button\"\n            className=\"button is-info card-footer-item\"\n            data-testid=\"btn-next\"\n            onClick={() => this.saveScore()}\n          >\n            FINALIZAR\n          </button>\n        </Link>\n      );\n    }\n    return (\n      <button\n        type=\"button\"\n        className=\"button is-info card-footer-item\"\n        onClick={() => {\n          this.nextQuestion();\n          ResetTimer();\n        }}\n        data-testid=\"btn-next\"\n      >\n        PRÓXIMA\n      </button>\n    );\n  }\n\n  render() {\n    const { stopTimer } = this.props;\n    return (\n      <div className=\"card-footer\">\n        <div className=\"card-footer-item\">\n          <Timer />\n        </div>\n        <div>\n          {stopTimer && this.renderButtonNextQuestion()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  ReducerTimer: { timer, stopTimer },\n  ReducerQuestions: { questionNumber },\n  ReducerPlayer: {\n    name,\n    gravatarEmail,\n    assertions,\n    score,\n  },\n}) => ({\n  timer,\n  questionNumber,\n  name,\n  gravatarEmail,\n  assertions,\n  score,\n  stopTimer,\n});\n\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    ResetTimer: ActionResetTimer,\n    ChangeQuestion: ActionNextQuestion,\n  }, dispatch,\n);\n\nGameFooter.propTypes = {\n  ResetTimer: PropTypes.func.isRequired,\n  ChangeQuestion: PropTypes.func.isRequired,\n  questionNumber: PropTypes.number.isRequired,\n  stopTimer: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  gravatarEmail: PropTypes.string.isRequired,\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nGameFooter.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameFooter);\n"]},"metadata":{},"sourceType":"module"}