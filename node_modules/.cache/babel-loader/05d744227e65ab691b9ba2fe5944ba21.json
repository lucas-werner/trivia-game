{"ast":null,"code":"import _classCallCheck from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/lucaswerner/repositories/github-personal/trivia-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{bindActionCreators}from'redux';import GameHeader from'../../components/GameHeader';import GameContent from'../../components/GameContent';import GameFooter from'../../components/GameFooter';import Loading from'../../components/Loading';import ActionGetQuestions from'../../store/actions/ActionGetQuestions';import'./GamePage.css';var Game=/*#__PURE__*/function(_Component){_inherits(Game,_Component);var _super=_createSuper(Game);function Game(){_classCallCheck(this,Game);return _super.apply(this,arguments);}_createClass(Game,[{key:\"componentDidMount\",value:function componentDidMount(){var GetQuestions=this.props.GetQuestions;var token=localStorage.getItem('token');console.log('token:',token);GetQuestions(token);}},{key:\"render\",value:function render(){var questions=this.props.questions;if(questions.length===0){return/*#__PURE__*/React.createElement(Loading,null);}return/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',justifyContent:'center'}},/*#__PURE__*/React.createElement(\"div\",{className:\"card\",style:{width:'600px'}},/*#__PURE__*/React.createElement(GameHeader,null),/*#__PURE__*/React.createElement(GameContent,null),/*#__PURE__*/React.createElement(GameFooter,null)));}}]);return Game;}(Component);var mapStateToProps=function mapStateToProps(_ref){var _ref$ReducerQuestions=_ref.ReducerQuestions,loading=_ref$ReducerQuestions.loading,questions=_ref$ReducerQuestions.questions;return{loading:loading,questions:questions};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return bindActionCreators({GetQuestions:ActionGetQuestions},dispatch);};Game.defaultProps={};export default connect(mapStateToProps,mapDispatchToProps)(Game);","map":{"version":3,"sources":["/home/lucaswerner/repositories/github-personal/trivia-game/src/pages/GamePage/index.js"],"names":["React","Component","connect","bindActionCreators","GameHeader","GameContent","GameFooter","Loading","ActionGetQuestions","Game","GetQuestions","props","token","localStorage","getItem","console","log","questions","length","display","justifyContent","width","mapStateToProps","ReducerQuestions","loading","mapDispatchToProps","dispatch","defaultProps"],"mappings":"orBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,kBAAT,KAAmC,OAAnC,CAEA,MAAOC,CAAAA,UAAP,KAAuB,6BAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,8BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,6BAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,wCAA/B,CACA,MAAO,gBAAP,C,GAEMC,CAAAA,I,0PACgB,IACVC,CAAAA,YADU,CACO,KAAKC,KADZ,CACVD,YADU,CAElB,GAAME,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACAC,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBJ,KAAtB,EACAF,YAAY,CAACE,KAAD,CAAZ,CACD,C,uCAEQ,IACCK,CAAAA,SADD,CACe,KAAKN,KADpB,CACCM,SADD,CAEP,GAAIA,SAAS,CAACC,MAAV,GAAqB,CAAzB,CAA4B,CAC1B,mBAAO,oBAAC,OAAD,MAAP,CACD,CACD,mBACE,2BACE,KAAK,CAAE,CACLC,OAAO,CAAE,MADJ,CAELC,cAAc,CAAE,QAFX,CADT,eAME,2BACE,SAAS,CAAC,MADZ,CAEE,KAAK,CAAE,CACLC,KAAK,CAAE,OADF,CAFT,eAME,oBAAC,UAAD,MANF,cAOE,oBAAC,WAAD,MAPF,cAQE,oBAAC,UAAD,MARF,CANF,CADF,CAmBD,C,kBAhCgBpB,S,EAmCnB,GAAMqB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,sCAAGC,gBAAH,CAAuBC,OAAvB,uBAAuBA,OAAvB,CAAgCP,SAAhC,uBAAgCA,SAAhC,OAAmD,CACzEO,OAAO,CAAPA,OADyE,CAEzEP,SAAS,CAATA,SAFyE,CAAnD,EAAxB,CAMA,GAAMQ,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAcvB,CAAAA,kBAAkB,CACzD,CACEO,YAAY,CAAEF,kBADhB,CADyD,CAGtDkB,QAHsD,CAAhC,EAA3B,CAWAjB,IAAI,CAACkB,YAAL,CAAoB,EAApB,CAGA,cAAezB,CAAAA,OAAO,CAACoB,eAAD,CAAkBG,kBAAlB,CAAP,CAA6ChB,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport propTypes from 'prop-types';\nimport GameHeader from '../../components/GameHeader';\nimport GameContent from '../../components/GameContent';\nimport GameFooter from '../../components/GameFooter';\nimport Loading from '../../components/Loading';\nimport ActionGetQuestions from '../../store/actions/ActionGetQuestions';\nimport './GamePage.css';\n\nclass Game extends Component {\n  componentDidMount() {\n    const { GetQuestions } = this.props;\n    const token = localStorage.getItem('token');\n    console.log('token:', token);\n    GetQuestions(token);\n  }\n\n  render() {\n    const { questions } = this.props;\n    if (questions.length === 0) {\n      return <Loading />;\n    }\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <div\n          className=\"card\"\n          style={{\n            width: '600px',\n          }}\n        >\n          <GameHeader />\n          <GameContent />\n          <GameFooter />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ ReducerQuestions: { loading, questions } }) => ({\n  loading,\n  questions,\n});\n\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    GetQuestions: ActionGetQuestions,\n  }, dispatch,\n);\n\nGame.propTypes = {\n  GetQuestions: propTypes.func.isRequired,\n  questions: propTypes.arrayOf(propTypes.object).isRequired,\n};\n\nGame.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}