{"version":3,"sources":["store/reducers/ReducerLogin.js","store/actions/ActionTypes.js","store/reducers/ReducerToken.js","store/reducers/ReducerQuestions.js","store/reducers/ReducerPlayer.js","store/reducers/ReducerTimer.js","store/reducers/index.js","store/index.js","components/SettingsButton.js","store/actions/ActionSubmitLogin.js","store/actions/ActionHandleLogin.js","services/GET_TOKEN_API.js","store/actions/ActionGetToken.js","services/GET_QUESTIONS_API.js","store/actions/ActionGetQuestions.js","store/actions/ActionNextQuestion.js","store/actions/ActionSavePlayer.js","store/actions/ActionSumPoints.js","store/actions/ActionLogout.js","services/GET_GRAVATAR_API.js","pages/LoginPage/index.js","components/GameHeader.js","store/actions/ActionsTimer.js","components/GameContent.js","components/Timer.js","components/GameFooter.js","components/Loading.js","pages/GamePage/index.js","pages/FeedbackPage/index.js","pages/RankingPage/index.js","pages/SettingsPage/index.js","App.js","index.js"],"names":["INICIAL_STATE","name","email","logged","ReducerLogin","state","type","payload","value","initialState","loading","token","error","reducerTriviaAPI","action","questions","questionNumber","ReducerQuestions","gravatarEmail","assertions","score","ReducerPlayer","timer","stopTimer","ReducerTimer","rootReducer","combineReducers","ReducerToken","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","SettingsButton","to","data-testid","font-size","React","Component","ActionSubmitLogin","ActionHandleLogin","GET_TOKEN_API","a","fetch","response","json","ok","Promise","resolve","reject","ActionGetToken","dispatch","then","data","localStorage","setItem","tokenError","message","GET_QUESTIONS_API","ActionGetQuestions","results","console","log","questionsError","nextQuestion","ActionSavePlayer","ActionSumPoints","ActionLogout","GET_GRAVATAR_API","parseEmail","trim","toLowerCase","MD5","Login","props","this","SubmitLogin","GetToken","SavePlayer","removeItem","getItem","JSON","stringify","player","HandleLogin","className","htmlFor","onChange","e","target","disabled","onClick","startGame","style","display","justifyContent","width","renderInputEmail","renderInputName","renderSubmitButton","renderInput","defaultProps","connect","bindActionCreators","GameHeader","parse","src","alt","ActionResetTimer","ActionTickTimer","ActionStopTimer","GameContent","wrongAnswers","document","getElementsByClassName","wrongAnswersArr","correctAnswer","map","answer","classList","add","difficulty","obj","event","highlightCorrectAnswer","answerClassList","includes","calculatePoints","sumPoints","difficultyValue","difficultyMeasurement","points","saveScore","correct_answer","incorrectAnswers","incorrect_answers","options","isCorrect","push","sort","compareAnswers","category","question","decodeURIComponent","toStopTimer","generateOptions","object","i","handleAnswer","renderQuestions","renderOptions","b","ans1","toUpperCase","ans2","comparison","Timer","setTimer","StartTimer","prevProps","prevStopTimer","clearInterval","TickTimer","setState","setInterval","GameFooter","newPlayer","previousRanking","newRanking","getRanking","Logout","updateRanking","ChangeQuestion","removeCorrectAnswerHighlight","remove","ResetTimer","endGame","renderButtonNextQuestion","ActionNextQuestion","Loading","height","size","Game","GetQuestions","length","Feedback","flexDirection","textAlign","renderFeedbackInfo","renderButtons","stringfiedState","renderFeedbackMessage","Ranking","ranking","index","restartGame","renderRankingList","renderGoHomeButton","Settings","App","exact","path","component","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.88afbb3e.chunk.js","sourcesContent":["import * as types from '../actions/ActionTypes';\n\nconst INICIAL_STATE = {\n  name: '',\n  email: '',\n  logged: false,\n};\n\nconst ReducerLogin = (state = INICIAL_STATE, { type, payload }) => {\n  switch (type) {\n    case types.HANDLE_LOGIN:\n      return { ...state, [payload.name]: payload.value };\n    case types.HANDLE_SUBMIT:\n      return { ...state, logged: true };\n    case types.HANDLE_LOGOUT:\n      return INICIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nexport default ReducerLogin;\n","export const HANDLE_LOGIN = 'HANDLE_LOGIN';\nexport const HANDLE_SUBMIT = 'HANDLE_SUBMIT';\nexport const REQUEST_TOKEN = 'REQUEST_TOKEN';\nexport const TOKEN_SUCCESS = 'TOKEN_SUCCESS';\nexport const TOKEN_ERROR = 'TOKEN_ERROR';\nexport const REQUEST_QUESTIONS = 'REQUEST_QUESTIONS';\nexport const QUESTIONS_SUCCESS = 'QUESTIONS_SUCCESS';\nexport const QUESTIONS_ERROR = 'QUESTIONS_ERROR';\nexport const NEXT_QUESTION = 'NEXT-QUESTION';\nexport const SAVE_PLAYER = 'SAVE_PLAYER';\nexport const RESET_TIMER = 'RESET_TIMER';\nexport const STOP_TIMER = 'STOP_TIMER';\nexport const TICK_TIMER = 'TICK_TIMER';\nexport const SAVE_TIMER = 'SAVE_TIMER';\nexport const SUM_POINTS = 'SUM_POINTS';\nexport const HANDLE_LOGOUT = 'HANDLE_LOGOUT';\n","import * as types from '../actions/ActionTypes';\n\nconst initialState = {\n  loading: false,\n  token: '',\n  error: '',\n};\n\nfunction reducerTriviaAPI(state = initialState, action) {\n  switch (action.type) {\n    case types.REQUEST_TOKEN:\n      return {\n        ...state,\n        loading: true,\n      };\n    case types.TOKEN_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        token: action.payload.token,\n      };\n    case types.TOKEN_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reducerTriviaAPI;\n","import * as types from '../actions/ActionTypes';\n\nconst INICIAL_STATE = {\n  loading: false,\n  questions: [],\n  questionNumber: 0,\n  error: '',\n};\n\nfunction ReducerQuestions(state = INICIAL_STATE, action) {\n  switch (action.type) {\n    case types.REQUEST_QUESTIONS:\n      return {\n        ...state,\n        loading: true,\n      };\n    case types.QUESTIONS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        questions: action.payload.questions,\n      };\n    case types.QUESTIONS_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      };\n    case types.NEXT_QUESTION:\n      return {\n        ...state,\n        questionNumber: state.questionNumber + 1,\n      };\n    case types.HANDLE_LOGOUT:\n      return INICIAL_STATE;\n    default:\n      return state;\n  }\n}\n\nexport default ReducerQuestions;\n","import * as types from '../actions/ActionTypes';\n\nconst INICIAL_STATE = {\n  name: '',\n  gravatarEmail: '',\n  assertions: 0,\n  score: 0,\n};\n\nconst ReducerPlayer = (state = INICIAL_STATE, { type, payload }) => {\n  switch (type) {\n    case types.SAVE_PLAYER:\n      return { ...state, name: payload.name, gravatarEmail: payload.gravatarEmail };\n    case types.SUM_POINTS:\n      return {\n        ...state,\n        score: state.score + payload.score,\n        assertions: state.assertions + 1,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default ReducerPlayer;\n","import * as types from '../actions/ActionTypes';\n\nconst INICIAL_STATE = {\n  timer: 30,\n  stopTimer: false,\n};\n\nconst ReducerTimer = (state = INICIAL_STATE, { type }) => {\n  switch (type) {\n    case types.TICK_TIMER:\n      if (state.timer !== 0 && state.stopTimer === false) {\n        return {\n          ...state, timer: state.timer - 1,\n        };\n      } return { ...state };\n    case types.RESET_TIMER:\n      return { ...state, stopTimer: false, timer: 30 };\n    case types.STOP_TIMER:\n      return { ...state, stopTimer: true, timer: 30 };\n    case types.HANDLE_LOGOUT:\n      return INICIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nexport default ReducerTimer;\n","import { combineReducers } from 'redux';\nimport ReducerLogin from './ReducerLogin';\nimport ReducerToken from './ReducerToken';\nimport ReducerQuestions from './ReducerQuestions';\nimport ReducerPlayer from './ReducerPlayer';\nimport ReducerTimer from './ReducerTimer';\n\nconst rootReducer = () => combineReducers({\n  ReducerLogin,\n  ReducerToken,\n  ReducerQuestions,\n  ReducerPlayer,\n  ReducerTimer,\n});\n\nexport default rootReducer;\n","\nimport {\n  createStore, applyMiddleware, compose,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer(), composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { DiAptana } from 'react-icons/di';\n\nclass SettingsButton extends React.Component {\n  render() {\n    return <Link to=\"/settings\" data-testid=\"btn-settings\"><DiAptana font-size=\"2em\" /></Link>;\n  }\n}\n\nexport default SettingsButton;\n","import * as types from './ActionTypes';\n\nconst ActionSubmitLogin = () => ({\n  type: types.HANDLE_SUBMIT,\n});\n\nexport default ActionSubmitLogin;\n","import * as types from './ActionTypes';\n\nconst ActionHandleLogin = ({ name, value }) => ({\n  type: types.HANDLE_LOGIN,\n  payload: { name, value },\n});\n\nexport default ActionHandleLogin;\n","const GET_TOKEN_API = async () => {\n  const response = await fetch('https://opentdb.com/api_token.php?command=request');\n  const json = await response.json();\n  return (response.ok ? Promise.resolve(json) : Promise.reject(json));\n};\n\nexport default GET_TOKEN_API;\n","import * as types from './ActionTypes';\nimport GET_TOKEN_API from '../../services/GET_TOKEN_API';\n\nconst requestToken = () => ({\n  type: types.REQUEST_TOKEN,\n});\n\nconst tokenSuccess = (token) => ({\n  type: types.TOKEN_SUCCESS,\n  payload: {\n    token,\n  },\n});\n\nconst tokenError = (error) => ({\n  type: types.TOKEN_ERROR,\n  payload: {\n    error,\n  },\n});\n\nexport default function ActionGetToken() {\n  return (dispatch) => {\n    dispatch(requestToken());\n    return GET_TOKEN_API()\n      .then((data) => {\n        dispatch(tokenSuccess(data.token));\n        localStorage.setItem('token', data.token);\n      },\n      (error) => dispatch(tokenError(error.message)));\n  };\n}\n","const GET_QUESTIONS_API = async (token) => {\n  const response = await fetch(`https://opentdb.com/api.php?amount=5&encode=url3986&token=${token}`);\n  const json = await response.json();\n  return (response.ok ? Promise.resolve(json) : Promise.reject(json));\n};\n\nexport default GET_QUESTIONS_API;\n","import * as types from './ActionTypes';\nimport GET_QUESTIONS_API from '../../services/GET_QUESTIONS_API';\n\nconst requestQuestions = () => ({\n  type: types.REQUEST_QUESTIONS,\n});\n\n\nconst questionsSuccess = (questions) => ({\n  type: types.QUESTIONS_SUCCESS,\n  payload: {\n    questions,\n  },\n});\n\nconst questionsError = (error) => ({\n  type: types.QUESTIONS_ERROR,\n  payload: {\n    error,\n  },\n});\n\nexport default function ActionGetQuestions(token) {\n  return (dispatch) => {\n    dispatch(requestQuestions());\n    return GET_QUESTIONS_API(token)\n      .then((data) => dispatch(questionsSuccess(data.results), console.log('teste', data)),\n        (error) => dispatch(questionsError(error.message)));\n  };\n}\n","import * as types from './ActionTypes';\n\nconst nextQuestion = () => ({\n  type: types.NEXT_QUESTION,\n});\n\nexport default nextQuestion;\n","import * as types from './ActionTypes';\n\nconst ActionSavePlayer = (name, gravatarEmail) => ({\n  type: types.SAVE_PLAYER,\n  payload: { name, gravatarEmail },\n});\n\nexport default ActionSavePlayer;\n","import * as types from './ActionTypes';\n\nconst ActionSumPoints = (score) => ({\n  type: types.SUM_POINTS,\n  payload: {\n    score,\n  },\n});\n\nexport default ActionSumPoints;\n","import * as types from './ActionTypes';\n\nconst ActionLogout = () => ({\n  type: types.HANDLE_LOGOUT,\n});\n\nexport default ActionLogout;\n","import MD5 from 'crypto-js/md5';\n\nconst GET_GRAVATAR_API = (email) => {\n  const parseEmail = email.trim().toLowerCase();\n  return `https://www.gravatar.com/avatar/${MD5(parseEmail)}`;\n};\n\nexport default GET_GRAVATAR_API;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport 'bulma/css/bulma.css';\nimport SettingsButton from '../../components/SettingsButton';\nimport {\n  ActionSubmitLogin, ActionHandleLogin, ActionGetToken, ActionSavePlayer,\n} from '../../store/actions';\nimport GET_GRAVATAR_API from '../../services/GET_GRAVATAR_API';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async startGame() {\n    const {\n      SubmitLogin, GetToken, email, name, SavePlayer,\n    } = this.props;\n    localStorage.removeItem('token');\n    const token = localStorage.getItem('token');\n    const gravatarEmail = GET_GRAVATAR_API(email);\n    SavePlayer(name, gravatarEmail);\n    if (!token) {\n      await GetToken();\n    }\n    localStorage.removeItem('state');\n    localStorage.setItem('state', JSON.stringify({\n      player: {\n        name, gravatarEmail, assertions: 0, score: 0,\n      },\n    }));\n    SubmitLogin();\n  }\n\n  renderInputEmail() {\n    const { email, HandleLogin } = this.props;\n    return (\n      <div className=\"field\">\n        <label htmlFor=\"email\" className=\"label\">Email do Gravatar:</label>\n        <input\n          htmlFor=\"email\"\n          name=\"email\"\n          value={email}\n          type=\"email\"\n          data-testid=\"input-gravatar-email\"\n          onChange={(e) => HandleLogin(e.target)}\n          className=\"input\"\n        />\n      </div>\n    );\n  }\n\n  renderInputName() {\n    const { name, HandleLogin } = this.props;\n    return (\n      <div className=\"field\">\n        <label htmlFor=\"player-name\" className=\"label\">Nome do Jogador:</label>\n        <input\n          htmlFor=\"player-name\"\n          name=\"name\"\n          value={name}\n          type=\"text\"\n          data-testid=\"input-player-name\"\n          onChange={(e) => HandleLogin(e.target)}\n          className=\"input\"\n        />\n      </div>\n    );\n  }\n\n  renderSubmitButton() {\n    const { email, name } = this.props;\n    const disabled = (name !== '' && email !== '');\n    return (\n      <button\n        type=\"button\"\n        value=\"Jogar\"\n        data-testid=\"btn-play\"\n        disabled={!disabled}\n        onClick={() => this.startGame()}\n        className=\"button is-success\"\n      >\n        Jogar\n      </button>\n\n    );\n  }\n\n  renderInput() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <div\n          className=\"card\"\n          style={{\n            width: '400px',\n          }}\n        >\n          <div className=\"card-header\">\n            <SettingsButton />\n          </div>\n          <div className=\"card-content\">\n            {this.renderInputEmail()}\n            {this.renderInputName()}\n          </div>\n          <div className=\"card-content\">\n            {this.renderSubmitButton()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { logged } = this.props;\n    if (logged) return <Redirect to=\"/game\" />;\n\n    return this.renderInput();\n  }\n}\n\n\nconst mapStateToProps = ({\n  ReducerLogin: {\n    name, email, logged,\n  },\n}) => ({\n  name, email, logged,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    HandleLogin: ActionHandleLogin,\n    SubmitLogin: ActionSubmitLogin,\n    GetToken: ActionGetToken,\n    SavePlayer: ActionSavePlayer,\n  }, dispatch,\n);\n\nLogin.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  logged: PropTypes.bool.isRequired,\n  HandleLogin: PropTypes.func.isRequired,\n  SubmitLogin: PropTypes.func.isRequired,\n  GetToken: PropTypes.func.isRequired,\n  SavePlayer: PropTypes.func.isRequired,\n};\n\nLogin.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass GameHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { player } = JSON.parse(localStorage.getItem('state'));\n    const { score } = this.props;\n    return (\n      <header className=\"card-header\">\n        <div className=\"card-header-title\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <img\n                src={player.gravatarEmail}\n                alt=\"profile-pic\"\n                className=\"image is-48x48\"\n                data-testid=\"header-profile-picture\"\n              />\n            </div>\n            <p className=\"title is-6\" data-testid=\"header-player-name\">{`Jogador: ${player.name}`}</p>\n            <div className=\"media-right\">\n              <p className=\"subtitle is-6\" data-testid=\"header-score\">\n                {score}\n              </p>\n            </div>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  ReducerPlayer: { name, gravatarEmail, score },\n}) => ({\n  name,\n  gravatarEmail,\n  score,\n});\n\n\nGameHeader.propTypes = {\n  score: PropTypes.number.isRequired,\n};\n\nexport default connect(mapStateToProps)(GameHeader);\n","import * as types from './ActionTypes';\n\nexport const ActionResetTimer = () => ({ type: types.RESET_TIMER });\nexport const ActionTickTimer = () => ({ type: types.TICK_TIMER });\nexport const ActionStopTimer = () => ({ type: types.STOP_TIMER });\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../pages/GamePage/GamePage.css';\nimport { ActionStopTimer } from '../store/actions/ActionsTimer';\nimport { ActionSumPoints } from '../store/actions';\n\nclass GameContent extends Component {\n  static compareAnswers(a, b) {\n    const ans1 = a.answer.toUpperCase();\n    const ans2 = b.answer.toUpperCase();\n    let comparison = 0;\n    if (ans1 > ans2) {\n      comparison = 1;\n    } else if (ans1 < ans2) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n  highlightCorrectAnswer() {\n    console.log(this.props);\n    const wrongAnswers = document.getElementsByClassName('wrong-answer');\n    const wrongAnswersArr = [...wrongAnswers];\n    const correctAnswer = document.getElementsByClassName('correct-answer')[0];\n    wrongAnswersArr.map((answer) => answer.classList.add('wrong'));\n    correctAnswer.classList.add('correct');\n  }\n\n  difficultyMeasurement(difficulty) {\n    console.log(this.props);\n    switch (difficulty) {\n      case 'easy': {\n        return 1;\n      }\n      case 'medium': {\n        return 2;\n      }\n      case 'hard': {\n        return 3;\n      }\n      default: return 0;\n    }\n  }\n\n  saveScore() {\n    const {\n      name,\n      gravatarEmail,\n      assertions, score,\n    } = this.props;\n    const obj = {\n      player: {\n        name, gravatarEmail, assertions, score,\n      },\n    };\n    localStorage.removeItem('state');\n    localStorage.setItem('state', JSON.stringify(obj));\n  }\n\n  handleAnswer(event) {\n    this.highlightCorrectAnswer();\n    const answerClassList = event.target.classList;\n    const answer = [...answerClassList];\n    if (answer.includes('correct-answer')) {\n      this.calculatePoints();\n    }\n  }\n\n  async calculatePoints() {\n    const {\n      questions,\n      questionNumber,\n      timer, sumPoints,\n    } = this.props;\n    const { difficulty } = questions[questionNumber];\n    const difficultyValue = this.difficultyMeasurement(difficulty);\n    const points = 10 + (timer * difficultyValue);\n    await sumPoints(points);\n    this.saveScore();\n  }\n\n  generateOptions() {\n    const { questions, questionNumber } = this.props;\n    const {\n      correct_answer: correctAnswer,\n      incorrect_answers: incorrectAnswers,\n    } = questions[questionNumber];\n    const options = [{\n      answer: correctAnswer,\n      isCorrect: true,\n    }];\n    incorrectAnswers.map((answer) => options.push({\n      answer,\n      isCorrect: false,\n    }));\n    return options.sort(GameContent.compareAnswers);\n  }\n\n  renderQuestions() {\n    const { questions, questionNumber } = this.props;\n    const { category, question } = questions[questionNumber];\n    return (\n      <div className=\"game-content-question\">\n        <div data-testid=\"question-category\" className=\"game-content-category\">\n          {decodeURIComponent(category)}\n        </div>\n        <div data-testid=\"question-text\">\n          <p>{decodeURIComponent(question)}</p>\n        </div>\n      </div>\n    );\n  }\n\n  renderOptions() {\n    const { timer, stopTimer, toStopTimer } = this.props;\n    return (\n      <div className=\"game-content-answers\">\n        {this.generateOptions().map(\n          (object, i) => (\n            <button\n              data-testid={object.isCorrect ? 'correct-answer' : `wrong-answer-${i}`}\n              type=\"button\"\n              className={`button is-fullwidth \n                ${object.isCorrect ? 'correct-answer' : 'wrong-answer'}`}\n              onClick={(event) => {\n                this.handleAnswer(event);\n                toStopTimer();\n              }}\n              disabled={(timer === 0 || stopTimer)}\n            >\n              {decodeURIComponent(object.answer)}\n            </button>\n          ),\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"game-content\">\n        {this.renderQuestions()}\n        {this.renderOptions()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (\n  {\n    ReducerQuestions: { questions, questionNumber },\n    ReducerTimer: { timer, stopTimer },\n    ReducerPlayer: {\n      name,\n      gravatarEmail,\n      assertions,\n      score,\n    },\n  },\n) => ({\n  questionNumber,\n  questions,\n  timer,\n  stopTimer,\n  name,\n  gravatarEmail,\n  assertions,\n  score,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    toStopTimer: ActionStopTimer,\n    sumPoints: ActionSumPoints,\n  }, dispatch,\n);\n\nGameContent.propTypes = {\n  questionNumber: PropTypes.number.isRequired,\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  timer: PropTypes.number.isRequired,\n  sumPoints: PropTypes.func.isRequired,\n  stopTimer: PropTypes.bool.isRequired,\n  toStopTimer: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  gravatarEmail: PropTypes.string.isRequired,\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nGameContent.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameContent);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { ActionTickTimer } from '../store/actions/ActionsTimer';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      setTimer: '',\n    };\n  }\n\n  async componentDidMount() {\n    await this.StartTimer();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { stopTimer } = this.props;\n    const { stopTimer: prevStopTimer } = prevProps;\n    const { setTimer } = this.state;\n    if (stopTimer === true) {\n      clearInterval(setTimer);\n    }\n\n    if (prevStopTimer === true) {\n      clearInterval(setTimer);\n      this.StartTimer();\n    }\n  }\n\n  StartTimer() {\n    const { TickTimer } = this.props;\n    this.setState(() => ({ setTimer: setInterval(() => TickTimer(), 1000) }));\n  }\n\n  render() {\n    const { timer } = this.props;\n    return (\n      <div data-testid=\"timer\">\n        {`Tempo: ${timer}`}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    TickTimer: ActionTickTimer,\n  }, dispatch,\n);\n\nconst mapStateToProps = ({\n  ReducerTimer: { timer, stopTimer },\n}) => ({\n  timer, stopTimer,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n\nTimer.propTypes = {\n  stopTimer: PropTypes.bool,\n  timer: PropTypes.number.isRequired,\n  TickTimer: PropTypes.func.isRequired,\n};\n\nTimer.defaultProps = {\n  stopTimer: false,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Timer from './Timer';\nimport { ActionResetTimer } from '../store/actions/ActionsTimer';\nimport { ActionNextQuestion, ActionLogout } from '../store/actions';\n\n\nclass GameFooter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  getRanking() {\n    const {\n      name,\n      gravatarEmail,\n      score,\n    } = this.props;\n    const newPlayer = { name, gravatarEmail, score };\n    const previousRanking = localStorage.getItem('ranking') !== null ? JSON.parse(localStorage.getItem('ranking')) : null;\n    if (previousRanking === null) {\n      return [\n        newPlayer,\n      ];\n    }\n    return [\n      ...previousRanking,\n      newPlayer,\n    ].sort((a, b) => b.score - a.score);\n  }\n\n  updateRanking() {\n    const newRanking = this.getRanking();\n    localStorage.setItem('ranking', JSON.stringify(newRanking));\n  }\n\n\n  endGame() {\n    const { Logout } = this.props;\n    this.updateRanking();\n    Logout();\n  }\n\n  nextQuestion() {\n    const { ChangeQuestion } = this.props;\n    ChangeQuestion();\n    this.removeCorrectAnswerHighlight();\n  }\n\n  removeCorrectAnswerHighlight() {\n    console.log(this.props);\n    const wrongAnswers = document.getElementsByClassName('wrong-answer');\n    const wrongAnswersArr = [...wrongAnswers];\n    const correctAnswer = document.getElementsByClassName('correct-answer')[0];\n    wrongAnswersArr.map((answer) => answer.classList.remove('wrong'));\n    correctAnswer.classList.remove('correct');\n  }\n\n  renderButtonNextQuestion() {\n    const { questionNumber, ResetTimer } = this.props;\n    if (questionNumber === 4) {\n      return (\n        <Link to=\"/feedback\">\n          <button\n            type=\"button\"\n            className=\"button is-info card-footer-item\"\n            data-testid=\"btn-next\"\n            onClick={() => this.endGame()}\n          >\n            FINALIZAR\n          </button>\n        </Link>\n      );\n    }\n    return (\n      <button\n        type=\"button\"\n        className=\"button is-info card-footer-item\"\n        onClick={() => {\n          this.nextQuestion();\n          ResetTimer();\n        }}\n        data-testid=\"btn-next\"\n      >\n        PRÓXIMA\n      </button>\n    );\n  }\n\n  render() {\n    const { stopTimer } = this.props;\n    return (\n      <div className=\"card-footer\">\n        <div className=\"card-footer-item\">\n          <Timer />\n        </div>\n        <div>\n          {stopTimer && this.renderButtonNextQuestion()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  ReducerTimer: { timer, stopTimer },\n  ReducerQuestions: { questionNumber },\n  ReducerPlayer: {\n    name,\n    gravatarEmail,\n    assertions,\n    score,\n  },\n}) => ({\n  timer,\n  questionNumber,\n  name,\n  gravatarEmail,\n  assertions,\n  score,\n  stopTimer,\n});\n\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    ResetTimer: ActionResetTimer,\n    ChangeQuestion: ActionNextQuestion,\n    Logout: ActionLogout,\n  }, dispatch,\n);\n\nGameFooter.propTypes = {\n  ResetTimer: PropTypes.func.isRequired,\n  ChangeQuestion: PropTypes.func.isRequired,\n  questionNumber: PropTypes.number.isRequired,\n  stopTimer: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  gravatarEmail: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  Logout: PropTypes.func.isRequired,\n};\n\nGameFooter.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameFooter);\n","import React from 'react';\nimport { Spinner } from 'react-rainbow-components';\n\nexport default function Loading() {\n  return (\n    <div style={{ width: 300, height: 200 }}>\n      <Spinner size=\"large\" />\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport propTypes from 'prop-types';\nimport GameHeader from '../../components/GameHeader';\nimport GameContent from '../../components/GameContent';\nimport GameFooter from '../../components/GameFooter';\nimport Loading from '../../components/Loading';\nimport ActionGetQuestions from '../../store/actions/ActionGetQuestions';\nimport './GamePage.css';\n\nclass Game extends Component {\n  componentDidMount() {\n    const { GetQuestions } = this.props;\n    const token = localStorage.getItem('token');\n    console.log('token:', token);\n    GetQuestions(token);\n  }\n\n  render() {\n    const { questions } = this.props;\n    if (questions.length === 0) {\n      return <Loading />;\n    }\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <div\n          className=\"card\"\n          style={{\n            width: '600px',\n          }}\n        >\n          <GameHeader />\n          <GameContent />\n          <GameFooter />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ ReducerQuestions: { loading, questions } }) => ({\n  loading,\n  questions,\n});\n\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    GetQuestions: ActionGetQuestions,\n  }, dispatch,\n);\n\nGame.propTypes = {\n  GetQuestions: propTypes.func.isRequired,\n  questions: propTypes.arrayOf(propTypes.object).isRequired,\n};\n\nGame.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Header from '../../components/GameHeader';\n\nclass Feedback extends Component {\n  static renderFeedbackMessage() {\n    const stringfiedState = localStorage.getItem('state');\n    const state = JSON.parse(stringfiedState);\n    const { player: { assertions } } = state;\n    if (assertions < 3) {\n      return 'Podia ser melhor...';\n    }\n    return 'Mandou bem!';\n  }\n\n  static renderFeedbackInfo() {\n    const stringfiedState = localStorage.getItem('state');\n    const state = JSON.parse(stringfiedState);\n    const { player: { assertions, score } } = state;\n    return (\n      <div>\n        <p data-testid=\"feedback-text\">{Feedback.renderFeedbackMessage(assertions)}</p>\n        <p data-testid=\"feedback-total-score\">{score}</p>\n        <p data-testid=\"feedback-total-question\">{assertions}</p>\n      </div>\n    );\n  }\n\n  static renderButtons() {\n    return (\n      <div>\n        <Link to=\"/\">\n          <button data-testid=\"btn-play-again\" type=\"button\">\n            Jogar novamente\n          </button>\n        </Link>\n        <Link to=\"/ranking\">\n          <button data-testid=\"btn-ranking\" type=\"button\">\n            Ver Ranking\n          </button>\n        </Link>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          textAlign: 'center',\n          width: '600px',\n        }}\n      >\n        <Header />\n        {Feedback.renderFeedbackInfo()}\n        {Feedback.renderButtons()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ ReducerQuestions: { loading, questions } }) => ({\n  loading,\n  questions,\n});\n\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n\n  }, dispatch,\n);\n\nFeedback.defaultProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\n\nclass Ranking extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  restartGame() {\n    console.log(this.props);\n    localStorage.removeItem('state');\n  }\n\n  renderRankingList() {\n    console.log(this.props);\n    const ranking = JSON.parse(localStorage.getItem('ranking'));\n    return (\n      <ol>\n        {ranking.map(({ name, gravatarEmail, score }, index) => (\n          <li>\n            <img className=\"image is-25x25\" src={gravatarEmail} alt=\"profile-pic\" />\n            <span data-testid={`player-name-${index}`}>{`${name} - `}</span>\n            <span data-testid={`player-score-${index}`}>{score}</span>\n          </li>\n        ))}\n      </ol>\n    );\n  }\n\n  renderGoHomeButton() {\n    console.log(this.props);\n    return (\n      <Link to=\"/\">\n        <button\n          type=\"button\"\n          className=\"button is-info card-footer-item\"\n          data-testid=\"btn-go-home\"\n          onClick={() => this.restartGame()}\n        >\n          JOGAR NOVAMENTE\n        </button>\n      </Link>\n    );\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <div\n          className=\"card\"\n          style={{\n            width: '600px',\n          }}\n        >\n          <div className=\"card-header-title is-centered\" data-testid=\"ranking-title\">\n            Ranking\n          </div>\n          <div className=\"card-content\">\n            {this.renderRankingList()}\n          </div>\n          <div className=\"card-content\">\n            {this.renderGoHomeButton()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Ranking;\n","import React, { Component } from 'react';\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    return (<div data-testid=\"settings-title\">Merda</div>);\n  }\n}\n\nexport default Settings;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/LoginPage';\nimport Game from './pages/GamePage';\nimport Feedback from './pages/FeedbackPage';\nimport Ranking from './pages/RankingPage';\nimport Settings from './pages/SettingsPage';\nimport './App.css';\n\n\nexport default function App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/game\" component={Game} />\n      <Route exact path=\"/feedback\" component={Feedback} />\n      <Route exact path=\"/settings\" component={Settings} />\n      <Route exact path=\"/ranking\" component={Ranking} />\n    </Switch>\n\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename=\"/trivia-game\">\n      <App />\n    </Router>\n  </Provider>, document.getElementById('root'),\n);\n"],"sourceRoot":""}